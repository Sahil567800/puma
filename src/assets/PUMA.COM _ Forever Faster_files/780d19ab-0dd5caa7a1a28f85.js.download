"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9372],{50967:function(u,e,r){var t,a=r(30816).Buffer,n=Object.create,s=Object.defineProperty,i=Object.getOwnPropertyDescriptor,o=Object.getOwnPropertyNames,l=Object.getPrototypeOf,c=Object.prototype.hasOwnProperty,$=(u,e)=>function(){return e||(0,u[o(u)[0]])((e={exports:{}}).exports,e),e.exports},p=(u,e,r,t)=>{if(e&&"object"==typeof e||"function"==typeof e)for(let a of o(e))c.call(u,a)||a===r||s(u,a,{get:()=>e[a],enumerable:!(t=i(e,a))||t.enumerable});return u},_=(u,e,r)=>(r=null!=u?n(l(u)):{},p(!e&&u&&u.__esModule?r:s(r,"default",{value:u,enumerable:!0}),u)),g=$({"../../node_modules/html-entities/lib/named-references.js"(u){Object.defineProperty(u,"__esModule",{value:!0}),u.bodyRegExps={xml:/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g},u.namedReferences={xml:{entities:{"&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},characters:{"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"}},html4:{entities:{"&apos;":"'","&nbsp":"\xa0","&nbsp;":"\xa0","&iexcl":"\xa1","&iexcl;":"\xa1","&cent":"\xa2","&cent;":"\xa2","&pound":"\xa3","&pound;":"\xa3","&curren":"\xa4","&curren;":"\xa4","&yen":"\xa5","&yen;":"\xa5","&brvbar":"\xa6","&brvbar;":"\xa6","&sect":"\xa7","&sect;":"\xa7","&uml":"\xa8","&uml;":"\xa8","&copy":"\xa9","&copy;":"\xa9","&ordf":"\xaa","&ordf;":"\xaa","&laquo":"\xab","&laquo;":"\xab","&not":"\xac","&not;":"\xac","&shy":"\xad","&shy;":"\xad","&reg":"\xae","&reg;":"\xae","&macr":"\xaf","&macr;":"\xaf","&deg":"\xb0","&deg;":"\xb0","&plusmn":"\xb1","&plusmn;":"\xb1","&sup2":"\xb2","&sup2;":"\xb2","&sup3":"\xb3","&sup3;":"\xb3","&acute":"\xb4","&acute;":"\xb4","&micro":"\xb5","&micro;":"\xb5","&para":"\xb6","&para;":"\xb6","&middot":"\xb7","&middot;":"\xb7","&cedil":"\xb8","&cedil;":"\xb8","&sup1":"\xb9","&sup1;":"\xb9","&ordm":"\xba","&ordm;":"\xba","&raquo":"\xbb","&raquo;":"\xbb","&frac14":"\xbc","&frac14;":"\xbc","&frac12":"\xbd","&frac12;":"\xbd","&frac34":"\xbe","&frac34;":"\xbe","&iquest":"\xbf","&iquest;":"\xbf","&Agrave":"\xc0","&Agrave;":"\xc0","&Aacute":"\xc1","&Aacute;":"\xc1","&Acirc":"\xc2","&Acirc;":"\xc2","&Atilde":"\xc3","&Atilde;":"\xc3","&Auml":"\xc4","&Auml;":"\xc4","&Aring":"\xc5","&Aring;":"\xc5","&AElig":"\xc6","&AElig;":"\xc6","&Ccedil":"\xc7","&Ccedil;":"\xc7","&Egrave":"\xc8","&Egrave;":"\xc8","&Eacute":"\xc9","&Eacute;":"\xc9","&Ecirc":"\xca","&Ecirc;":"\xca","&Euml":"\xcb","&Euml;":"\xcb","&Igrave":"\xcc","&Igrave;":"\xcc","&Iacute":"\xcd","&Iacute;":"\xcd","&Icirc":"\xce","&Icirc;":"\xce","&Iuml":"\xcf","&Iuml;":"\xcf","&ETH":"\xd0","&ETH;":"\xd0","&Ntilde":"\xd1","&Ntilde;":"\xd1","&Ograve":"\xd2","&Ograve;":"\xd2","&Oacute":"\xd3","&Oacute;":"\xd3","&Ocirc":"\xd4","&Ocirc;":"\xd4","&Otilde":"\xd5","&Otilde;":"\xd5","&Ouml":"\xd6","&Ouml;":"\xd6","&times":"\xd7","&times;":"\xd7","&Oslash":"\xd8","&Oslash;":"\xd8","&Ugrave":"\xd9","&Ugrave;":"\xd9","&Uacute":"\xda","&Uacute;":"\xda","&Ucirc":"\xdb","&Ucirc;":"\xdb","&Uuml":"\xdc","&Uuml;":"\xdc","&Yacute":"\xdd","&Yacute;":"\xdd","&THORN":"\xde","&THORN;":"\xde","&szlig":"\xdf","&szlig;":"\xdf","&agrave":"\xe0","&agrave;":"\xe0","&aacute":"\xe1","&aacute;":"\xe1","&acirc":"\xe2","&acirc;":"\xe2","&atilde":"\xe3","&atilde;":"\xe3","&auml":"\xe4","&auml;":"\xe4","&aring":"\xe5","&aring;":"\xe5","&aelig":"\xe6","&aelig;":"\xe6","&ccedil":"\xe7","&ccedil;":"\xe7","&egrave":"\xe8","&egrave;":"\xe8","&eacute":"\xe9","&eacute;":"\xe9","&ecirc":"\xea","&ecirc;":"\xea","&euml":"\xeb","&euml;":"\xeb","&igrave":"\xec","&igrave;":"\xec","&iacute":"\xed","&iacute;":"\xed","&icirc":"\xee","&icirc;":"\xee","&iuml":"\xef","&iuml;":"\xef","&eth":"\xf0","&eth;":"\xf0","&ntilde":"\xf1","&ntilde;":"\xf1","&ograve":"\xf2","&ograve;":"\xf2","&oacute":"\xf3","&oacute;":"\xf3","&ocirc":"\xf4","&ocirc;":"\xf4","&otilde":"\xf5","&otilde;":"\xf5","&ouml":"\xf6","&ouml;":"\xf6","&divide":"\xf7","&divide;":"\xf7","&oslash":"\xf8","&oslash;":"\xf8","&ugrave":"\xf9","&ugrave;":"\xf9","&uacute":"\xfa","&uacute;":"\xfa","&ucirc":"\xfb","&ucirc;":"\xfb","&uuml":"\xfc","&uuml;":"\xfc","&yacute":"\xfd","&yacute;":"\xfd","&thorn":"\xfe","&thorn;":"\xfe","&yuml":"\xff","&yuml;":"\xff","&quot":'"',"&quot;":'"',"&amp":"&","&amp;":"&","&lt":"<","&lt;":"<","&gt":">","&gt;":">","&OElig;":"Œ","&oelig;":"œ","&Scaron;":"Š","&scaron;":"š","&Yuml;":"Ÿ","&circ;":"ˆ","&tilde;":"˜","&ensp;":" ","&emsp;":" ","&thinsp;":" ","&zwnj;":"‌","&zwj;":"‍","&lrm;":"‎","&rlm;":"‏","&ndash;":"–","&mdash;":"—","&lsquo;":"‘","&rsquo;":"’","&sbquo;":"‚","&ldquo;":"“","&rdquo;":"”","&bdquo;":"„","&dagger;":"†","&Dagger;":"‡","&permil;":"‰","&lsaquo;":"‹","&rsaquo;":"›","&euro;":"€","&fnof;":"ƒ","&Alpha;":"Α","&Beta;":"Β","&Gamma;":"Γ","&Delta;":"Δ","&Epsilon;":"Ε","&Zeta;":"Ζ","&Eta;":"Η","&Theta;":"Θ","&Iota;":"Ι","&Kappa;":"Κ","&Lambda;":"Λ","&Mu;":"Μ","&Nu;":"Ν","&Xi;":"Ξ","&Omicron;":"Ο","&Pi;":"Π","&Rho;":"Ρ","&Sigma;":"Σ","&Tau;":"Τ","&Upsilon;":"Υ","&Phi;":"Φ","&Chi;":"Χ","&Psi;":"Ψ","&Omega;":"Ω","&alpha;":"α","&beta;":"β","&gamma;":"γ","&delta;":"δ","&epsilon;":"ε","&zeta;":"ζ","&eta;":"η","&theta;":"θ","&iota;":"ι","&kappa;":"κ","&lambda;":"λ","&mu;":"μ","&nu;":"ν","&xi;":"ξ","&omicron;":"ο","&pi;":"π","&rho;":"ρ","&sigmaf;":"ς","&sigma;":"σ","&tau;":"τ","&upsilon;":"υ","&phi;":"φ","&chi;":"χ","&psi;":"ψ","&omega;":"ω","&thetasym;":"ϑ","&upsih;":"ϒ","&piv;":"ϖ","&bull;":"•","&hellip;":"…","&prime;":"′","&Prime;":"″","&oline;":"‾","&frasl;":"⁄","&weierp;":"℘","&image;":"ℑ","&real;":"ℜ","&trade;":"™","&alefsym;":"ℵ","&larr;":"←","&uarr;":"↑","&rarr;":"→","&darr;":"↓","&harr;":"↔","&crarr;":"↵","&lArr;":"⇐","&uArr;":"⇑","&rArr;":"⇒","&dArr;":"⇓","&hArr;":"⇔","&forall;":"∀","&part;":"∂","&exist;":"∃","&empty;":"∅","&nabla;":"∇","&isin;":"∈","&notin;":"∉","&ni;":"∋","&prod;":"∏","&sum;":"∑","&minus;":"−","&lowast;":"∗","&radic;":"√","&prop;":"∝","&infin;":"∞","&ang;":"∠","&and;":"∧","&or;":"∨","&cap;":"∩","&cup;":"∪","&int;":"∫","&there4;":"∴","&sim;":"∼","&cong;":"≅","&asymp;":"≈","&ne;":"≠","&equiv;":"≡","&le;":"≤","&ge;":"≥","&sub;":"⊂","&sup;":"⊃","&nsub;":"⊄","&sube;":"⊆","&supe;":"⊇","&oplus;":"⊕","&otimes;":"⊗","&perp;":"⊥","&sdot;":"⋅","&lceil;":"⌈","&rceil;":"⌉","&lfloor;":"⌊","&rfloor;":"⌋","&lang;":"〈","&rang;":"〉","&loz;":"◊","&spades;":"♠","&clubs;":"♣","&hearts;":"♥","&diams;":"♦"},characters:{"'":"&apos;","\xa0":"&nbsp;","\xa1":"&iexcl;","\xa2":"&cent;","\xa3":"&pound;","\xa4":"&curren;","\xa5":"&yen;","\xa6":"&brvbar;","\xa7":"&sect;","\xa8":"&uml;","\xa9":"&copy;",ª:"&ordf;","\xab":"&laquo;","\xac":"&not;","\xad":"&shy;","\xae":"&reg;","\xaf":"&macr;","\xb0":"&deg;","\xb1":"&plusmn;","\xb2":"&sup2;","\xb3":"&sup3;","\xb4":"&acute;",µ:"&micro;","\xb6":"&para;","\xb7":"&middot;","\xb8":"&cedil;","\xb9":"&sup1;",º:"&ordm;","\xbb":"&raquo;","\xbc":"&frac14;","\xbd":"&frac12;","\xbe":"&frac34;","\xbf":"&iquest;",À:"&Agrave;",Á:"&Aacute;",Â:"&Acirc;",Ã:"&Atilde;",Ä:"&Auml;",Å:"&Aring;",Æ:"&AElig;",Ç:"&Ccedil;",È:"&Egrave;",É:"&Eacute;",Ê:"&Ecirc;",Ë:"&Euml;",Ì:"&Igrave;",Í:"&Iacute;",Î:"&Icirc;",Ï:"&Iuml;",Ð:"&ETH;",Ñ:"&Ntilde;",Ò:"&Ograve;",Ó:"&Oacute;",Ô:"&Ocirc;",Õ:"&Otilde;",Ö:"&Ouml;","\xd7":"&times;",Ø:"&Oslash;",Ù:"&Ugrave;",Ú:"&Uacute;",Û:"&Ucirc;",Ü:"&Uuml;",Ý:"&Yacute;",Þ:"&THORN;",ß:"&szlig;",à:"&agrave;",á:"&aacute;",â:"&acirc;",ã:"&atilde;",ä:"&auml;",å:"&aring;",æ:"&aelig;",ç:"&ccedil;",è:"&egrave;",é:"&eacute;",ê:"&ecirc;",ë:"&euml;",ì:"&igrave;",í:"&iacute;",î:"&icirc;",ï:"&iuml;",ð:"&eth;",ñ:"&ntilde;",ò:"&ograve;",ó:"&oacute;",ô:"&ocirc;",õ:"&otilde;",ö:"&ouml;","\xf7":"&divide;",ø:"&oslash;",ù:"&ugrave;",ú:"&uacute;",û:"&ucirc;",ü:"&uuml;",ý:"&yacute;",þ:"&thorn;",ÿ:"&yuml;",'"':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;",Œ:"&OElig;",œ:"&oelig;",Š:"&Scaron;",š:"&scaron;",Ÿ:"&Yuml;",ˆ:"&circ;","˜":"&tilde;"," ":"&ensp;"," ":"&emsp;"," ":"&thinsp;","‌":"&zwnj;","‍":"&zwj;","‎":"&lrm;","‏":"&rlm;","–":"&ndash;","—":"&mdash;","‘":"&lsquo;","’":"&rsquo;","‚":"&sbquo;","“":"&ldquo;","”":"&rdquo;","„":"&bdquo;","†":"&dagger;","‡":"&Dagger;","‰":"&permil;","‹":"&lsaquo;","›":"&rsaquo;","€":"&euro;",ƒ:"&fnof;",Α:"&Alpha;",Β:"&Beta;",Γ:"&Gamma;",Δ:"&Delta;",Ε:"&Epsilon;",Ζ:"&Zeta;",Η:"&Eta;",Θ:"&Theta;",Ι:"&Iota;",Κ:"&Kappa;",Λ:"&Lambda;",Μ:"&Mu;",Ν:"&Nu;",Ξ:"&Xi;",Ο:"&Omicron;",Π:"&Pi;",Ρ:"&Rho;",Σ:"&Sigma;",Τ:"&Tau;",Υ:"&Upsilon;",Φ:"&Phi;",Χ:"&Chi;",Ψ:"&Psi;",Ω:"&Omega;",α:"&alpha;",β:"&beta;",γ:"&gamma;",δ:"&delta;",ε:"&epsilon;",ζ:"&zeta;",η:"&eta;",θ:"&theta;",ι:"&iota;",κ:"&kappa;",λ:"&lambda;",μ:"&mu;",ν:"&nu;",ξ:"&xi;",ο:"&omicron;",π:"&pi;",ρ:"&rho;",ς:"&sigmaf;",σ:"&sigma;",τ:"&tau;",υ:"&upsilon;",φ:"&phi;",χ:"&chi;",ψ:"&psi;",ω:"&omega;",ϑ:"&thetasym;",ϒ:"&upsih;",ϖ:"&piv;","•":"&bull;","…":"&hellip;","′":"&prime;","″":"&Prime;","‾":"&oline;","⁄":"&frasl;",℘:"&weierp;",ℑ:"&image;",ℜ:"&real;","™":"&trade;",ℵ:"&alefsym;","←":"&larr;","↑":"&uarr;","→":"&rarr;","↓":"&darr;","↔":"&harr;","↵":"&crarr;","⇐":"&lArr;","⇑":"&uArr;","⇒":"&rArr;","⇓":"&dArr;","⇔":"&hArr;","∀":"&forall;","∂":"&part;","∃":"&exist;","∅":"&empty;","∇":"&nabla;","∈":"&isin;","∉":"&notin;","∋":"&ni;","∏":"&prod;","∑":"&sum;","−":"&minus;","∗":"&lowast;","√":"&radic;","∝":"&prop;","∞":"&infin;","∠":"&ang;","∧":"&and;","∨":"&or;","∩":"&cap;","∪":"&cup;","∫":"&int;","∴":"&there4;","∼":"&sim;","≅":"&cong;","≈":"&asymp;","≠":"&ne;","≡":"&equiv;","≤":"&le;","≥":"&ge;","⊂":"&sub;","⊃":"&sup;","⊄":"&nsub;","⊆":"&sube;","⊇":"&supe;","⊕":"&oplus;","⊗":"&otimes;","⊥":"&perp;","⋅":"&sdot;","⌈":"&lceil;","⌉":"&rceil;","⌊":"&lfloor;","⌋":"&rfloor;","〈":"&lang;","〉":"&rang;","◊":"&loz;","♠":"&spades;","♣":"&clubs;","♥":"&hearts;","♦":"&diams;"}},html5:{entities:{"&AElig":"\xc6","&AElig;":"\xc6","&AMP":"&","&AMP;":"&","&Aacute":"\xc1","&Aacute;":"\xc1","&Abreve;":"Ă","&Acirc":"\xc2","&Acirc;":"\xc2","&Acy;":"А","&Afr;":"\uD835\uDD04","&Agrave":"\xc0","&Agrave;":"\xc0","&Alpha;":"Α","&Amacr;":"Ā","&And;":"⩓","&Aogon;":"Ą","&Aopf;":"\uD835\uDD38","&ApplyFunction;":"⁡","&Aring":"\xc5","&Aring;":"\xc5","&Ascr;":"\uD835\uDC9C","&Assign;":"≔","&Atilde":"\xc3","&Atilde;":"\xc3","&Auml":"\xc4","&Auml;":"\xc4","&Backslash;":"∖","&Barv;":"⫧","&Barwed;":"⌆","&Bcy;":"Б","&Because;":"∵","&Bernoullis;":"ℬ","&Beta;":"Β","&Bfr;":"\uD835\uDD05","&Bopf;":"\uD835\uDD39","&Breve;":"˘","&Bscr;":"ℬ","&Bumpeq;":"≎","&CHcy;":"Ч","&COPY":"\xa9","&COPY;":"\xa9","&Cacute;":"Ć","&Cap;":"⋒","&CapitalDifferentialD;":"ⅅ","&Cayleys;":"ℭ","&Ccaron;":"Č","&Ccedil":"\xc7","&Ccedil;":"\xc7","&Ccirc;":"Ĉ","&Cconint;":"∰","&Cdot;":"Ċ","&Cedilla;":"\xb8","&CenterDot;":"\xb7","&Cfr;":"ℭ","&Chi;":"Χ","&CircleDot;":"⊙","&CircleMinus;":"⊖","&CirclePlus;":"⊕","&CircleTimes;":"⊗","&ClockwiseContourIntegral;":"∲","&CloseCurlyDoubleQuote;":"”","&CloseCurlyQuote;":"’","&Colon;":"∷","&Colone;":"⩴","&Congruent;":"≡","&Conint;":"∯","&ContourIntegral;":"∮","&Copf;":"ℂ","&Coproduct;":"∐","&CounterClockwiseContourIntegral;":"∳","&Cross;":"⨯","&Cscr;":"\uD835\uDC9E","&Cup;":"⋓","&CupCap;":"≍","&DD;":"ⅅ","&DDotrahd;":"⤑","&DJcy;":"Ђ","&DScy;":"Ѕ","&DZcy;":"Џ","&Dagger;":"‡","&Darr;":"↡","&Dashv;":"⫤","&Dcaron;":"Ď","&Dcy;":"Д","&Del;":"∇","&Delta;":"Δ","&Dfr;":"\uD835\uDD07","&DiacriticalAcute;":"\xb4","&DiacriticalDot;":"˙","&DiacriticalDoubleAcute;":"˝","&DiacriticalGrave;":"`","&DiacriticalTilde;":"˜","&Diamond;":"⋄","&DifferentialD;":"ⅆ","&Dopf;":"\uD835\uDD3B","&Dot;":"\xa8","&DotDot;":"⃜","&DotEqual;":"≐","&DoubleContourIntegral;":"∯","&DoubleDot;":"\xa8","&DoubleDownArrow;":"⇓","&DoubleLeftArrow;":"⇐","&DoubleLeftRightArrow;":"⇔","&DoubleLeftTee;":"⫤","&DoubleLongLeftArrow;":"⟸","&DoubleLongLeftRightArrow;":"⟺","&DoubleLongRightArrow;":"⟹","&DoubleRightArrow;":"⇒","&DoubleRightTee;":"⊨","&DoubleUpArrow;":"⇑","&DoubleUpDownArrow;":"⇕","&DoubleVerticalBar;":"∥","&DownArrow;":"↓","&DownArrowBar;":"⤓","&DownArrowUpArrow;":"⇵","&DownBreve;":"̑","&DownLeftRightVector;":"⥐","&DownLeftTeeVector;":"⥞","&DownLeftVector;":"↽","&DownLeftVectorBar;":"⥖","&DownRightTeeVector;":"⥟","&DownRightVector;":"⇁","&DownRightVectorBar;":"⥗","&DownTee;":"⊤","&DownTeeArrow;":"↧","&Downarrow;":"⇓","&Dscr;":"\uD835\uDC9F","&Dstrok;":"Đ","&ENG;":"Ŋ","&ETH":"\xd0","&ETH;":"\xd0","&Eacute":"\xc9","&Eacute;":"\xc9","&Ecaron;":"Ě","&Ecirc":"\xca","&Ecirc;":"\xca","&Ecy;":"Э","&Edot;":"Ė","&Efr;":"\uD835\uDD08","&Egrave":"\xc8","&Egrave;":"\xc8","&Element;":"∈","&Emacr;":"Ē","&EmptySmallSquare;":"◻","&EmptyVerySmallSquare;":"▫","&Eogon;":"Ę","&Eopf;":"\uD835\uDD3C","&Epsilon;":"Ε","&Equal;":"⩵","&EqualTilde;":"≂","&Equilibrium;":"⇌","&Escr;":"ℰ","&Esim;":"⩳","&Eta;":"Η","&Euml":"\xcb","&Euml;":"\xcb","&Exists;":"∃","&ExponentialE;":"ⅇ","&Fcy;":"Ф","&Ffr;":"\uD835\uDD09","&FilledSmallSquare;":"◼","&FilledVerySmallSquare;":"▪","&Fopf;":"\uD835\uDD3D","&ForAll;":"∀","&Fouriertrf;":"ℱ","&Fscr;":"ℱ","&GJcy;":"Ѓ","&GT":">","&GT;":">","&Gamma;":"Γ","&Gammad;":"Ϝ","&Gbreve;":"Ğ","&Gcedil;":"Ģ","&Gcirc;":"Ĝ","&Gcy;":"Г","&Gdot;":"Ġ","&Gfr;":"\uD835\uDD0A","&Gg;":"⋙","&Gopf;":"\uD835\uDD3E","&GreaterEqual;":"≥","&GreaterEqualLess;":"⋛","&GreaterFullEqual;":"≧","&GreaterGreater;":"⪢","&GreaterLess;":"≷","&GreaterSlantEqual;":"⩾","&GreaterTilde;":"≳","&Gscr;":"\uD835\uDCA2","&Gt;":"≫","&HARDcy;":"Ъ","&Hacek;":"ˇ","&Hat;":"^","&Hcirc;":"Ĥ","&Hfr;":"ℌ","&HilbertSpace;":"ℋ","&Hopf;":"ℍ","&HorizontalLine;":"─","&Hscr;":"ℋ","&Hstrok;":"Ħ","&HumpDownHump;":"≎","&HumpEqual;":"≏","&IEcy;":"Е","&IJlig;":"Ĳ","&IOcy;":"Ё","&Iacute":"\xcd","&Iacute;":"\xcd","&Icirc":"\xce","&Icirc;":"\xce","&Icy;":"И","&Idot;":"İ","&Ifr;":"ℑ","&Igrave":"\xcc","&Igrave;":"\xcc","&Im;":"ℑ","&Imacr;":"Ī","&ImaginaryI;":"ⅈ","&Implies;":"⇒","&Int;":"∬","&Integral;":"∫","&Intersection;":"⋂","&InvisibleComma;":"⁣","&InvisibleTimes;":"⁢","&Iogon;":"Į","&Iopf;":"\uD835\uDD40","&Iota;":"Ι","&Iscr;":"ℐ","&Itilde;":"Ĩ","&Iukcy;":"І","&Iuml":"\xcf","&Iuml;":"\xcf","&Jcirc;":"Ĵ","&Jcy;":"Й","&Jfr;":"\uD835\uDD0D","&Jopf;":"\uD835\uDD41","&Jscr;":"\uD835\uDCA5","&Jsercy;":"Ј","&Jukcy;":"Є","&KHcy;":"Х","&KJcy;":"Ќ","&Kappa;":"Κ","&Kcedil;":"Ķ","&Kcy;":"К","&Kfr;":"\uD835\uDD0E","&Kopf;":"\uD835\uDD42","&Kscr;":"\uD835\uDCA6","&LJcy;":"Љ","&LT":"<","&LT;":"<","&Lacute;":"Ĺ","&Lambda;":"Λ","&Lang;":"⟪","&Laplacetrf;":"ℒ","&Larr;":"↞","&Lcaron;":"Ľ","&Lcedil;":"Ļ","&Lcy;":"Л","&LeftAngleBracket;":"⟨","&LeftArrow;":"←","&LeftArrowBar;":"⇤","&LeftArrowRightArrow;":"⇆","&LeftCeiling;":"⌈","&LeftDoubleBracket;":"⟦","&LeftDownTeeVector;":"⥡","&LeftDownVector;":"⇃","&LeftDownVectorBar;":"⥙","&LeftFloor;":"⌊","&LeftRightArrow;":"↔","&LeftRightVector;":"⥎","&LeftTee;":"⊣","&LeftTeeArrow;":"↤","&LeftTeeVector;":"⥚","&LeftTriangle;":"⊲","&LeftTriangleBar;":"⧏","&LeftTriangleEqual;":"⊴","&LeftUpDownVector;":"⥑","&LeftUpTeeVector;":"⥠","&LeftUpVector;":"↿","&LeftUpVectorBar;":"⥘","&LeftVector;":"↼","&LeftVectorBar;":"⥒","&Leftarrow;":"⇐","&Leftrightarrow;":"⇔","&LessEqualGreater;":"⋚","&LessFullEqual;":"≦","&LessGreater;":"≶","&LessLess;":"⪡","&LessSlantEqual;":"⩽","&LessTilde;":"≲","&Lfr;":"\uD835\uDD0F","&Ll;":"⋘","&Lleftarrow;":"⇚","&Lmidot;":"Ŀ","&LongLeftArrow;":"⟵","&LongLeftRightArrow;":"⟷","&LongRightArrow;":"⟶","&Longleftarrow;":"⟸","&Longleftrightarrow;":"⟺","&Longrightarrow;":"⟹","&Lopf;":"\uD835\uDD43","&LowerLeftArrow;":"↙","&LowerRightArrow;":"↘","&Lscr;":"ℒ","&Lsh;":"↰","&Lstrok;":"Ł","&Lt;":"≪","&Map;":"⤅","&Mcy;":"М","&MediumSpace;":" ","&Mellintrf;":"ℳ","&Mfr;":"\uD835\uDD10","&MinusPlus;":"∓","&Mopf;":"\uD835\uDD44","&Mscr;":"ℳ","&Mu;":"Μ","&NJcy;":"Њ","&Nacute;":"Ń","&Ncaron;":"Ň","&Ncedil;":"Ņ","&Ncy;":"Н","&NegativeMediumSpace;":"​","&NegativeThickSpace;":"​","&NegativeThinSpace;":"​","&NegativeVeryThinSpace;":"​","&NestedGreaterGreater;":"≫","&NestedLessLess;":"≪","&NewLine;":"\n","&Nfr;":"\uD835\uDD11","&NoBreak;":"⁠","&NonBreakingSpace;":"\xa0","&Nopf;":"ℕ","&Not;":"⫬","&NotCongruent;":"≢","&NotCupCap;":"≭","&NotDoubleVerticalBar;":"∦","&NotElement;":"∉","&NotEqual;":"≠","&NotEqualTilde;":"≂̸","&NotExists;":"∄","&NotGreater;":"≯","&NotGreaterEqual;":"≱","&NotGreaterFullEqual;":"≧̸","&NotGreaterGreater;":"≫̸","&NotGreaterLess;":"≹","&NotGreaterSlantEqual;":"⩾̸","&NotGreaterTilde;":"≵","&NotHumpDownHump;":"≎̸","&NotHumpEqual;":"≏̸","&NotLeftTriangle;":"⋪","&NotLeftTriangleBar;":"⧏̸","&NotLeftTriangleEqual;":"⋬","&NotLess;":"≮","&NotLessEqual;":"≰","&NotLessGreater;":"≸","&NotLessLess;":"≪̸","&NotLessSlantEqual;":"⩽̸","&NotLessTilde;":"≴","&NotNestedGreaterGreater;":"⪢̸","&NotNestedLessLess;":"⪡̸","&NotPrecedes;":"⊀","&NotPrecedesEqual;":"⪯̸","&NotPrecedesSlantEqual;":"⋠","&NotReverseElement;":"∌","&NotRightTriangle;":"⋫","&NotRightTriangleBar;":"⧐̸","&NotRightTriangleEqual;":"⋭","&NotSquareSubset;":"⊏̸","&NotSquareSubsetEqual;":"⋢","&NotSquareSuperset;":"⊐̸","&NotSquareSupersetEqual;":"⋣","&NotSubset;":"⊂⃒","&NotSubsetEqual;":"⊈","&NotSucceeds;":"⊁","&NotSucceedsEqual;":"⪰̸","&NotSucceedsSlantEqual;":"⋡","&NotSucceedsTilde;":"≿̸","&NotSuperset;":"⊃⃒","&NotSupersetEqual;":"⊉","&NotTilde;":"≁","&NotTildeEqual;":"≄","&NotTildeFullEqual;":"≇","&NotTildeTilde;":"≉","&NotVerticalBar;":"∤","&Nscr;":"\uD835\uDCA9","&Ntilde":"\xd1","&Ntilde;":"\xd1","&Nu;":"Ν","&OElig;":"Œ","&Oacute":"\xd3","&Oacute;":"\xd3","&Ocirc":"\xd4","&Ocirc;":"\xd4","&Ocy;":"О","&Odblac;":"Ő","&Ofr;":"\uD835\uDD12","&Ograve":"\xd2","&Ograve;":"\xd2","&Omacr;":"Ō","&Omega;":"Ω","&Omicron;":"Ο","&Oopf;":"\uD835\uDD46","&OpenCurlyDoubleQuote;":"“","&OpenCurlyQuote;":"‘","&Or;":"⩔","&Oscr;":"\uD835\uDCAA","&Oslash":"\xd8","&Oslash;":"\xd8","&Otilde":"\xd5","&Otilde;":"\xd5","&Otimes;":"⨷","&Ouml":"\xd6","&Ouml;":"\xd6","&OverBar;":"‾","&OverBrace;":"⏞","&OverBracket;":"⎴","&OverParenthesis;":"⏜","&PartialD;":"∂","&Pcy;":"П","&Pfr;":"\uD835\uDD13","&Phi;":"Φ","&Pi;":"Π","&PlusMinus;":"\xb1","&Poincareplane;":"ℌ","&Popf;":"ℙ","&Pr;":"⪻","&Precedes;":"≺","&PrecedesEqual;":"⪯","&PrecedesSlantEqual;":"≼","&PrecedesTilde;":"≾","&Prime;":"″","&Product;":"∏","&Proportion;":"∷","&Proportional;":"∝","&Pscr;":"\uD835\uDCAB","&Psi;":"Ψ","&QUOT":'"',"&QUOT;":'"',"&Qfr;":"\uD835\uDD14","&Qopf;":"ℚ","&Qscr;":"\uD835\uDCAC","&RBarr;":"⤐","&REG":"\xae","&REG;":"\xae","&Racute;":"Ŕ","&Rang;":"⟫","&Rarr;":"↠","&Rarrtl;":"⤖","&Rcaron;":"Ř","&Rcedil;":"Ŗ","&Rcy;":"Р","&Re;":"ℜ","&ReverseElement;":"∋","&ReverseEquilibrium;":"⇋","&ReverseUpEquilibrium;":"⥯","&Rfr;":"ℜ","&Rho;":"Ρ","&RightAngleBracket;":"⟩","&RightArrow;":"→","&RightArrowBar;":"⇥","&RightArrowLeftArrow;":"⇄","&RightCeiling;":"⌉","&RightDoubleBracket;":"⟧","&RightDownTeeVector;":"⥝","&RightDownVector;":"⇂","&RightDownVectorBar;":"⥕","&RightFloor;":"⌋","&RightTee;":"⊢","&RightTeeArrow;":"↦","&RightTeeVector;":"⥛","&RightTriangle;":"⊳","&RightTriangleBar;":"⧐","&RightTriangleEqual;":"⊵","&RightUpDownVector;":"⥏","&RightUpTeeVector;":"⥜","&RightUpVector;":"↾","&RightUpVectorBar;":"⥔","&RightVector;":"⇀","&RightVectorBar;":"⥓","&Rightarrow;":"⇒","&Ropf;":"ℝ","&RoundImplies;":"⥰","&Rrightarrow;":"⇛","&Rscr;":"ℛ","&Rsh;":"↱","&RuleDelayed;":"⧴","&SHCHcy;":"Щ","&SHcy;":"Ш","&SOFTcy;":"Ь","&Sacute;":"Ś","&Sc;":"⪼","&Scaron;":"Š","&Scedil;":"Ş","&Scirc;":"Ŝ","&Scy;":"С","&Sfr;":"\uD835\uDD16","&ShortDownArrow;":"↓","&ShortLeftArrow;":"←","&ShortRightArrow;":"→","&ShortUpArrow;":"↑","&Sigma;":"Σ","&SmallCircle;":"∘","&Sopf;":"\uD835\uDD4A","&Sqrt;":"√","&Square;":"□","&SquareIntersection;":"⊓","&SquareSubset;":"⊏","&SquareSubsetEqual;":"⊑","&SquareSuperset;":"⊐","&SquareSupersetEqual;":"⊒","&SquareUnion;":"⊔","&Sscr;":"\uD835\uDCAE","&Star;":"⋆","&Sub;":"⋐","&Subset;":"⋐","&SubsetEqual;":"⊆","&Succeeds;":"≻","&SucceedsEqual;":"⪰","&SucceedsSlantEqual;":"≽","&SucceedsTilde;":"≿","&SuchThat;":"∋","&Sum;":"∑","&Sup;":"⋑","&Superset;":"⊃","&SupersetEqual;":"⊇","&Supset;":"⋑","&THORN":"\xde","&THORN;":"\xde","&TRADE;":"™","&TSHcy;":"Ћ","&TScy;":"Ц","&Tab;":"	","&Tau;":"Τ","&Tcaron;":"Ť","&Tcedil;":"Ţ","&Tcy;":"Т","&Tfr;":"\uD835\uDD17","&Therefore;":"∴","&Theta;":"Θ","&ThickSpace;":"  ","&ThinSpace;":" ","&Tilde;":"∼","&TildeEqual;":"≃","&TildeFullEqual;":"≅","&TildeTilde;":"≈","&Topf;":"\uD835\uDD4B","&TripleDot;":"⃛","&Tscr;":"\uD835\uDCAF","&Tstrok;":"Ŧ","&Uacute":"\xda","&Uacute;":"\xda","&Uarr;":"↟","&Uarrocir;":"⥉","&Ubrcy;":"Ў","&Ubreve;":"Ŭ","&Ucirc":"\xdb","&Ucirc;":"\xdb","&Ucy;":"У","&Udblac;":"Ű","&Ufr;":"\uD835\uDD18","&Ugrave":"\xd9","&Ugrave;":"\xd9","&Umacr;":"Ū","&UnderBar;":"_","&UnderBrace;":"⏟","&UnderBracket;":"⎵","&UnderParenthesis;":"⏝","&Union;":"⋃","&UnionPlus;":"⊎","&Uogon;":"Ų","&Uopf;":"\uD835\uDD4C","&UpArrow;":"↑","&UpArrowBar;":"⤒","&UpArrowDownArrow;":"⇅","&UpDownArrow;":"↕","&UpEquilibrium;":"⥮","&UpTee;":"⊥","&UpTeeArrow;":"↥","&Uparrow;":"⇑","&Updownarrow;":"⇕","&UpperLeftArrow;":"↖","&UpperRightArrow;":"↗","&Upsi;":"ϒ","&Upsilon;":"Υ","&Uring;":"Ů","&Uscr;":"\uD835\uDCB0","&Utilde;":"Ũ","&Uuml":"\xdc","&Uuml;":"\xdc","&VDash;":"⊫","&Vbar;":"⫫","&Vcy;":"В","&Vdash;":"⊩","&Vdashl;":"⫦","&Vee;":"⋁","&Verbar;":"‖","&Vert;":"‖","&VerticalBar;":"∣","&VerticalLine;":"|","&VerticalSeparator;":"❘","&VerticalTilde;":"≀","&VeryThinSpace;":" ","&Vfr;":"\uD835\uDD19","&Vopf;":"\uD835\uDD4D","&Vscr;":"\uD835\uDCB1","&Vvdash;":"⊪","&Wcirc;":"Ŵ","&Wedge;":"⋀","&Wfr;":"\uD835\uDD1A","&Wopf;":"\uD835\uDD4E","&Wscr;":"\uD835\uDCB2","&Xfr;":"\uD835\uDD1B","&Xi;":"Ξ","&Xopf;":"\uD835\uDD4F","&Xscr;":"\uD835\uDCB3","&YAcy;":"Я","&YIcy;":"Ї","&YUcy;":"Ю","&Yacute":"\xdd","&Yacute;":"\xdd","&Ycirc;":"Ŷ","&Ycy;":"Ы","&Yfr;":"\uD835\uDD1C","&Yopf;":"\uD835\uDD50","&Yscr;":"\uD835\uDCB4","&Yuml;":"Ÿ","&ZHcy;":"Ж","&Zacute;":"Ź","&Zcaron;":"Ž","&Zcy;":"З","&Zdot;":"Ż","&ZeroWidthSpace;":"​","&Zeta;":"Ζ","&Zfr;":"ℨ","&Zopf;":"ℤ","&Zscr;":"\uD835\uDCB5","&aacute":"\xe1","&aacute;":"\xe1","&abreve;":"ă","&ac;":"∾","&acE;":"∾̳","&acd;":"∿","&acirc":"\xe2","&acirc;":"\xe2","&acute":"\xb4","&acute;":"\xb4","&acy;":"а","&aelig":"\xe6","&aelig;":"\xe6","&af;":"⁡","&afr;":"\uD835\uDD1E","&agrave":"\xe0","&agrave;":"\xe0","&alefsym;":"ℵ","&aleph;":"ℵ","&alpha;":"α","&amacr;":"ā","&amalg;":"⨿","&amp":"&","&amp;":"&","&and;":"∧","&andand;":"⩕","&andd;":"⩜","&andslope;":"⩘","&andv;":"⩚","&ang;":"∠","&ange;":"⦤","&angle;":"∠","&angmsd;":"∡","&angmsdaa;":"⦨","&angmsdab;":"⦩","&angmsdac;":"⦪","&angmsdad;":"⦫","&angmsdae;":"⦬","&angmsdaf;":"⦭","&angmsdag;":"⦮","&angmsdah;":"⦯","&angrt;":"∟","&angrtvb;":"⊾","&angrtvbd;":"⦝","&angsph;":"∢","&angst;":"\xc5","&angzarr;":"⍼","&aogon;":"ą","&aopf;":"\uD835\uDD52","&ap;":"≈","&apE;":"⩰","&apacir;":"⩯","&ape;":"≊","&apid;":"≋","&apos;":"'","&approx;":"≈","&approxeq;":"≊","&aring":"\xe5","&aring;":"\xe5","&ascr;":"\uD835\uDCB6","&ast;":"*","&asymp;":"≈","&asympeq;":"≍","&atilde":"\xe3","&atilde;":"\xe3","&auml":"\xe4","&auml;":"\xe4","&awconint;":"∳","&awint;":"⨑","&bNot;":"⫭","&backcong;":"≌","&backepsilon;":"϶","&backprime;":"‵","&backsim;":"∽","&backsimeq;":"⋍","&barvee;":"⊽","&barwed;":"⌅","&barwedge;":"⌅","&bbrk;":"⎵","&bbrktbrk;":"⎶","&bcong;":"≌","&bcy;":"б","&bdquo;":"„","&becaus;":"∵","&because;":"∵","&bemptyv;":"⦰","&bepsi;":"϶","&bernou;":"ℬ","&beta;":"β","&beth;":"ℶ","&between;":"≬","&bfr;":"\uD835\uDD1F","&bigcap;":"⋂","&bigcirc;":"◯","&bigcup;":"⋃","&bigodot;":"⨀","&bigoplus;":"⨁","&bigotimes;":"⨂","&bigsqcup;":"⨆","&bigstar;":"★","&bigtriangledown;":"▽","&bigtriangleup;":"△","&biguplus;":"⨄","&bigvee;":"⋁","&bigwedge;":"⋀","&bkarow;":"⤍","&blacklozenge;":"⧫","&blacksquare;":"▪","&blacktriangle;":"▴","&blacktriangledown;":"▾","&blacktriangleleft;":"◂","&blacktriangleright;":"▸","&blank;":"␣","&blk12;":"▒","&blk14;":"░","&blk34;":"▓","&block;":"█","&bne;":"=⃥","&bnequiv;":"≡⃥","&bnot;":"⌐","&bopf;":"\uD835\uDD53","&bot;":"⊥","&bottom;":"⊥","&bowtie;":"⋈","&boxDL;":"╗","&boxDR;":"╔","&boxDl;":"╖","&boxDr;":"╓","&boxH;":"═","&boxHD;":"╦","&boxHU;":"╩","&boxHd;":"╤","&boxHu;":"╧","&boxUL;":"╝","&boxUR;":"╚","&boxUl;":"╜","&boxUr;":"╙","&boxV;":"║","&boxVH;":"╬","&boxVL;":"╣","&boxVR;":"╠","&boxVh;":"╫","&boxVl;":"╢","&boxVr;":"╟","&boxbox;":"⧉","&boxdL;":"╕","&boxdR;":"╒","&boxdl;":"┐","&boxdr;":"┌","&boxh;":"─","&boxhD;":"╥","&boxhU;":"╨","&boxhd;":"┬","&boxhu;":"┴","&boxminus;":"⊟","&boxplus;":"⊞","&boxtimes;":"⊠","&boxuL;":"╛","&boxuR;":"╘","&boxul;":"┘","&boxur;":"└","&boxv;":"│","&boxvH;":"╪","&boxvL;":"╡","&boxvR;":"╞","&boxvh;":"┼","&boxvl;":"┤","&boxvr;":"├","&bprime;":"‵","&breve;":"˘","&brvbar":"\xa6","&brvbar;":"\xa6","&bscr;":"\uD835\uDCB7","&bsemi;":"⁏","&bsim;":"∽","&bsime;":"⋍","&bsol;":"\\","&bsolb;":"⧅","&bsolhsub;":"⟈","&bull;":"•","&bullet;":"•","&bump;":"≎","&bumpE;":"⪮","&bumpe;":"≏","&bumpeq;":"≏","&cacute;":"ć","&cap;":"∩","&capand;":"⩄","&capbrcup;":"⩉","&capcap;":"⩋","&capcup;":"⩇","&capdot;":"⩀","&caps;":"∩︀","&caret;":"⁁","&caron;":"ˇ","&ccaps;":"⩍","&ccaron;":"č","&ccedil":"\xe7","&ccedil;":"\xe7","&ccirc;":"ĉ","&ccups;":"⩌","&ccupssm;":"⩐","&cdot;":"ċ","&cedil":"\xb8","&cedil;":"\xb8","&cemptyv;":"⦲","&cent":"\xa2","&cent;":"\xa2","&centerdot;":"\xb7","&cfr;":"\uD835\uDD20","&chcy;":"ч","&check;":"✓","&checkmark;":"✓","&chi;":"χ","&cir;":"○","&cirE;":"⧃","&circ;":"ˆ","&circeq;":"≗","&circlearrowleft;":"↺","&circlearrowright;":"↻","&circledR;":"\xae","&circledS;":"Ⓢ","&circledast;":"⊛","&circledcirc;":"⊚","&circleddash;":"⊝","&cire;":"≗","&cirfnint;":"⨐","&cirmid;":"⫯","&cirscir;":"⧂","&clubs;":"♣","&clubsuit;":"♣","&colon;":":","&colone;":"≔","&coloneq;":"≔","&comma;":",","&commat;":"@","&comp;":"∁","&compfn;":"∘","&complement;":"∁","&complexes;":"ℂ","&cong;":"≅","&congdot;":"⩭","&conint;":"∮","&copf;":"\uD835\uDD54","&coprod;":"∐","&copy":"\xa9","&copy;":"\xa9","&copysr;":"℗","&crarr;":"↵","&cross;":"✗","&cscr;":"\uD835\uDCB8","&csub;":"⫏","&csube;":"⫑","&csup;":"⫐","&csupe;":"⫒","&ctdot;":"⋯","&cudarrl;":"⤸","&cudarrr;":"⤵","&cuepr;":"⋞","&cuesc;":"⋟","&cularr;":"↶","&cularrp;":"⤽","&cup;":"∪","&cupbrcap;":"⩈","&cupcap;":"⩆","&cupcup;":"⩊","&cupdot;":"⊍","&cupor;":"⩅","&cups;":"∪︀","&curarr;":"↷","&curarrm;":"⤼","&curlyeqprec;":"⋞","&curlyeqsucc;":"⋟","&curlyvee;":"⋎","&curlywedge;":"⋏","&curren":"\xa4","&curren;":"\xa4","&curvearrowleft;":"↶","&curvearrowright;":"↷","&cuvee;":"⋎","&cuwed;":"⋏","&cwconint;":"∲","&cwint;":"∱","&cylcty;":"⌭","&dArr;":"⇓","&dHar;":"⥥","&dagger;":"†","&daleth;":"ℸ","&darr;":"↓","&dash;":"‐","&dashv;":"⊣","&dbkarow;":"⤏","&dblac;":"˝","&dcaron;":"ď","&dcy;":"д","&dd;":"ⅆ","&ddagger;":"‡","&ddarr;":"⇊","&ddotseq;":"⩷","&deg":"\xb0","&deg;":"\xb0","&delta;":"δ","&demptyv;":"⦱","&dfisht;":"⥿","&dfr;":"\uD835\uDD21","&dharl;":"⇃","&dharr;":"⇂","&diam;":"⋄","&diamond;":"⋄","&diamondsuit;":"♦","&diams;":"♦","&die;":"\xa8","&digamma;":"ϝ","&disin;":"⋲","&div;":"\xf7","&divide":"\xf7","&divide;":"\xf7","&divideontimes;":"⋇","&divonx;":"⋇","&djcy;":"ђ","&dlcorn;":"⌞","&dlcrop;":"⌍","&dollar;":"$","&dopf;":"\uD835\uDD55","&dot;":"˙","&doteq;":"≐","&doteqdot;":"≑","&dotminus;":"∸","&dotplus;":"∔","&dotsquare;":"⊡","&doublebarwedge;":"⌆","&downarrow;":"↓","&downdownarrows;":"⇊","&downharpoonleft;":"⇃","&downharpoonright;":"⇂","&drbkarow;":"⤐","&drcorn;":"⌟","&drcrop;":"⌌","&dscr;":"\uD835\uDCB9","&dscy;":"ѕ","&dsol;":"⧶","&dstrok;":"đ","&dtdot;":"⋱","&dtri;":"▿","&dtrif;":"▾","&duarr;":"⇵","&duhar;":"⥯","&dwangle;":"⦦","&dzcy;":"џ","&dzigrarr;":"⟿","&eDDot;":"⩷","&eDot;":"≑","&eacute":"\xe9","&eacute;":"\xe9","&easter;":"⩮","&ecaron;":"ě","&ecir;":"≖","&ecirc":"\xea","&ecirc;":"\xea","&ecolon;":"≕","&ecy;":"э","&edot;":"ė","&ee;":"ⅇ","&efDot;":"≒","&efr;":"\uD835\uDD22","&eg;":"⪚","&egrave":"\xe8","&egrave;":"\xe8","&egs;":"⪖","&egsdot;":"⪘","&el;":"⪙","&elinters;":"⏧","&ell;":"ℓ","&els;":"⪕","&elsdot;":"⪗","&emacr;":"ē","&empty;":"∅","&emptyset;":"∅","&emptyv;":"∅","&emsp13;":" ","&emsp14;":" ","&emsp;":" ","&eng;":"ŋ","&ensp;":" ","&eogon;":"ę","&eopf;":"\uD835\uDD56","&epar;":"⋕","&eparsl;":"⧣","&eplus;":"⩱","&epsi;":"ε","&epsilon;":"ε","&epsiv;":"ϵ","&eqcirc;":"≖","&eqcolon;":"≕","&eqsim;":"≂","&eqslantgtr;":"⪖","&eqslantless;":"⪕","&equals;":"=","&equest;":"≟","&equiv;":"≡","&equivDD;":"⩸","&eqvparsl;":"⧥","&erDot;":"≓","&erarr;":"⥱","&escr;":"ℯ","&esdot;":"≐","&esim;":"≂","&eta;":"η","&eth":"\xf0","&eth;":"\xf0","&euml":"\xeb","&euml;":"\xeb","&euro;":"€","&excl;":"!","&exist;":"∃","&expectation;":"ℰ","&exponentiale;":"ⅇ","&fallingdotseq;":"≒","&fcy;":"ф","&female;":"♀","&ffilig;":"ﬃ","&fflig;":"ﬀ","&ffllig;":"ﬄ","&ffr;":"\uD835\uDD23","&filig;":"ﬁ","&fjlig;":"fj","&flat;":"♭","&fllig;":"ﬂ","&fltns;":"▱","&fnof;":"ƒ","&fopf;":"\uD835\uDD57","&forall;":"∀","&fork;":"⋔","&forkv;":"⫙","&fpartint;":"⨍","&frac12":"\xbd","&frac12;":"\xbd","&frac13;":"⅓","&frac14":"\xbc","&frac14;":"\xbc","&frac15;":"⅕","&frac16;":"⅙","&frac18;":"⅛","&frac23;":"⅔","&frac25;":"⅖","&frac34":"\xbe","&frac34;":"\xbe","&frac35;":"⅗","&frac38;":"⅜","&frac45;":"⅘","&frac56;":"⅚","&frac58;":"⅝","&frac78;":"⅞","&frasl;":"⁄","&frown;":"⌢","&fscr;":"\uD835\uDCBB","&gE;":"≧","&gEl;":"⪌","&gacute;":"ǵ","&gamma;":"γ","&gammad;":"ϝ","&gap;":"⪆","&gbreve;":"ğ","&gcirc;":"ĝ","&gcy;":"г","&gdot;":"ġ","&ge;":"≥","&gel;":"⋛","&geq;":"≥","&geqq;":"≧","&geqslant;":"⩾","&ges;":"⩾","&gescc;":"⪩","&gesdot;":"⪀","&gesdoto;":"⪂","&gesdotol;":"⪄","&gesl;":"⋛︀","&gesles;":"⪔","&gfr;":"\uD835\uDD24","&gg;":"≫","&ggg;":"⋙","&gimel;":"ℷ","&gjcy;":"ѓ","&gl;":"≷","&glE;":"⪒","&gla;":"⪥","&glj;":"⪤","&gnE;":"≩","&gnap;":"⪊","&gnapprox;":"⪊","&gne;":"⪈","&gneq;":"⪈","&gneqq;":"≩","&gnsim;":"⋧","&gopf;":"\uD835\uDD58","&grave;":"`","&gscr;":"ℊ","&gsim;":"≳","&gsime;":"⪎","&gsiml;":"⪐","&gt":">","&gt;":">","&gtcc;":"⪧","&gtcir;":"⩺","&gtdot;":"⋗","&gtlPar;":"⦕","&gtquest;":"⩼","&gtrapprox;":"⪆","&gtrarr;":"⥸","&gtrdot;":"⋗","&gtreqless;":"⋛","&gtreqqless;":"⪌","&gtrless;":"≷","&gtrsim;":"≳","&gvertneqq;":"≩︀","&gvnE;":"≩︀","&hArr;":"⇔","&hairsp;":" ","&half;":"\xbd","&hamilt;":"ℋ","&hardcy;":"ъ","&harr;":"↔","&harrcir;":"⥈","&harrw;":"↭","&hbar;":"ℏ","&hcirc;":"ĥ","&hearts;":"♥","&heartsuit;":"♥","&hellip;":"…","&hercon;":"⊹","&hfr;":"\uD835\uDD25","&hksearow;":"⤥","&hkswarow;":"⤦","&hoarr;":"⇿","&homtht;":"∻","&hookleftarrow;":"↩","&hookrightarrow;":"↪","&hopf;":"\uD835\uDD59","&horbar;":"―","&hscr;":"\uD835\uDCBD","&hslash;":"ℏ","&hstrok;":"ħ","&hybull;":"⁃","&hyphen;":"‐","&iacute":"\xed","&iacute;":"\xed","&ic;":"⁣","&icirc":"\xee","&icirc;":"\xee","&icy;":"и","&iecy;":"е","&iexcl":"\xa1","&iexcl;":"\xa1","&iff;":"⇔","&ifr;":"\uD835\uDD26","&igrave":"\xec","&igrave;":"\xec","&ii;":"ⅈ","&iiiint;":"⨌","&iiint;":"∭","&iinfin;":"⧜","&iiota;":"℩","&ijlig;":"ĳ","&imacr;":"ī","&image;":"ℑ","&imagline;":"ℐ","&imagpart;":"ℑ","&imath;":"ı","&imof;":"⊷","&imped;":"Ƶ","&in;":"∈","&incare;":"℅","&infin;":"∞","&infintie;":"⧝","&inodot;":"ı","&int;":"∫","&intcal;":"⊺","&integers;":"ℤ","&intercal;":"⊺","&intlarhk;":"⨗","&intprod;":"⨼","&iocy;":"ё","&iogon;":"į","&iopf;":"\uD835\uDD5A","&iota;":"ι","&iprod;":"⨼","&iquest":"\xbf","&iquest;":"\xbf","&iscr;":"\uD835\uDCBE","&isin;":"∈","&isinE;":"⋹","&isindot;":"⋵","&isins;":"⋴","&isinsv;":"⋳","&isinv;":"∈","&it;":"⁢","&itilde;":"ĩ","&iukcy;":"і","&iuml":"\xef","&iuml;":"\xef","&jcirc;":"ĵ","&jcy;":"й","&jfr;":"\uD835\uDD27","&jmath;":"ȷ","&jopf;":"\uD835\uDD5B","&jscr;":"\uD835\uDCBF","&jsercy;":"ј","&jukcy;":"є","&kappa;":"κ","&kappav;":"ϰ","&kcedil;":"ķ","&kcy;":"к","&kfr;":"\uD835\uDD28","&kgreen;":"ĸ","&khcy;":"х","&kjcy;":"ќ","&kopf;":"\uD835\uDD5C","&kscr;":"\uD835\uDCC0","&lAarr;":"⇚","&lArr;":"⇐","&lAtail;":"⤛","&lBarr;":"⤎","&lE;":"≦","&lEg;":"⪋","&lHar;":"⥢","&lacute;":"ĺ","&laemptyv;":"⦴","&lagran;":"ℒ","&lambda;":"λ","&lang;":"⟨","&langd;":"⦑","&langle;":"⟨","&lap;":"⪅","&laquo":"\xab","&laquo;":"\xab","&larr;":"←","&larrb;":"⇤","&larrbfs;":"⤟","&larrfs;":"⤝","&larrhk;":"↩","&larrlp;":"↫","&larrpl;":"⤹","&larrsim;":"⥳","&larrtl;":"↢","&lat;":"⪫","&latail;":"⤙","&late;":"⪭","&lates;":"⪭︀","&lbarr;":"⤌","&lbbrk;":"❲","&lbrace;":"{","&lbrack;":"[","&lbrke;":"⦋","&lbrksld;":"⦏","&lbrkslu;":"⦍","&lcaron;":"ľ","&lcedil;":"ļ","&lceil;":"⌈","&lcub;":"{","&lcy;":"л","&ldca;":"⤶","&ldquo;":"“","&ldquor;":"„","&ldrdhar;":"⥧","&ldrushar;":"⥋","&ldsh;":"↲","&le;":"≤","&leftarrow;":"←","&leftarrowtail;":"↢","&leftharpoondown;":"↽","&leftharpoonup;":"↼","&leftleftarrows;":"⇇","&leftrightarrow;":"↔","&leftrightarrows;":"⇆","&leftrightharpoons;":"⇋","&leftrightsquigarrow;":"↭","&leftthreetimes;":"⋋","&leg;":"⋚","&leq;":"≤","&leqq;":"≦","&leqslant;":"⩽","&les;":"⩽","&lescc;":"⪨","&lesdot;":"⩿","&lesdoto;":"⪁","&lesdotor;":"⪃","&lesg;":"⋚︀","&lesges;":"⪓","&lessapprox;":"⪅","&lessdot;":"⋖","&lesseqgtr;":"⋚","&lesseqqgtr;":"⪋","&lessgtr;":"≶","&lesssim;":"≲","&lfisht;":"⥼","&lfloor;":"⌊","&lfr;":"\uD835\uDD29","&lg;":"≶","&lgE;":"⪑","&lhard;":"↽","&lharu;":"↼","&lharul;":"⥪","&lhblk;":"▄","&ljcy;":"љ","&ll;":"≪","&llarr;":"⇇","&llcorner;":"⌞","&llhard;":"⥫","&lltri;":"◺","&lmidot;":"ŀ","&lmoust;":"⎰","&lmoustache;":"⎰","&lnE;":"≨","&lnap;":"⪉","&lnapprox;":"⪉","&lne;":"⪇","&lneq;":"⪇","&lneqq;":"≨","&lnsim;":"⋦","&loang;":"⟬","&loarr;":"⇽","&lobrk;":"⟦","&longleftarrow;":"⟵","&longleftrightarrow;":"⟷","&longmapsto;":"⟼","&longrightarrow;":"⟶","&looparrowleft;":"↫","&looparrowright;":"↬","&lopar;":"⦅","&lopf;":"\uD835\uDD5D","&loplus;":"⨭","&lotimes;":"⨴","&lowast;":"∗","&lowbar;":"_","&loz;":"◊","&lozenge;":"◊","&lozf;":"⧫","&lpar;":"(","&lparlt;":"⦓","&lrarr;":"⇆","&lrcorner;":"⌟","&lrhar;":"⇋","&lrhard;":"⥭","&lrm;":"‎","&lrtri;":"⊿","&lsaquo;":"‹","&lscr;":"\uD835\uDCC1","&lsh;":"↰","&lsim;":"≲","&lsime;":"⪍","&lsimg;":"⪏","&lsqb;":"[","&lsquo;":"‘","&lsquor;":"‚","&lstrok;":"ł","&lt":"<","&lt;":"<","&ltcc;":"⪦","&ltcir;":"⩹","&ltdot;":"⋖","&lthree;":"⋋","&ltimes;":"⋉","&ltlarr;":"⥶","&ltquest;":"⩻","&ltrPar;":"⦖","&ltri;":"◃","&ltrie;":"⊴","&ltrif;":"◂","&lurdshar;":"⥊","&luruhar;":"⥦","&lvertneqq;":"≨︀","&lvnE;":"≨︀","&mDDot;":"∺","&macr":"\xaf","&macr;":"\xaf","&male;":"♂","&malt;":"✠","&maltese;":"✠","&map;":"↦","&mapsto;":"↦","&mapstodown;":"↧","&mapstoleft;":"↤","&mapstoup;":"↥","&marker;":"▮","&mcomma;":"⨩","&mcy;":"м","&mdash;":"—","&measuredangle;":"∡","&mfr;":"\uD835\uDD2A","&mho;":"℧","&micro":"\xb5","&micro;":"\xb5","&mid;":"∣","&midast;":"*","&midcir;":"⫰","&middot":"\xb7","&middot;":"\xb7","&minus;":"−","&minusb;":"⊟","&minusd;":"∸","&minusdu;":"⨪","&mlcp;":"⫛","&mldr;":"…","&mnplus;":"∓","&models;":"⊧","&mopf;":"\uD835\uDD5E","&mp;":"∓","&mscr;":"\uD835\uDCC2","&mstpos;":"∾","&mu;":"μ","&multimap;":"⊸","&mumap;":"⊸","&nGg;":"⋙̸","&nGt;":"≫⃒","&nGtv;":"≫̸","&nLeftarrow;":"⇍","&nLeftrightarrow;":"⇎","&nLl;":"⋘̸","&nLt;":"≪⃒","&nLtv;":"≪̸","&nRightarrow;":"⇏","&nVDash;":"⊯","&nVdash;":"⊮","&nabla;":"∇","&nacute;":"ń","&nang;":"∠⃒","&nap;":"≉","&napE;":"⩰̸","&napid;":"≋̸","&napos;":"ŉ","&napprox;":"≉","&natur;":"♮","&natural;":"♮","&naturals;":"ℕ","&nbsp":"\xa0","&nbsp;":"\xa0","&nbump;":"≎̸","&nbumpe;":"≏̸","&ncap;":"⩃","&ncaron;":"ň","&ncedil;":"ņ","&ncong;":"≇","&ncongdot;":"⩭̸","&ncup;":"⩂","&ncy;":"н","&ndash;":"–","&ne;":"≠","&neArr;":"⇗","&nearhk;":"⤤","&nearr;":"↗","&nearrow;":"↗","&nedot;":"≐̸","&nequiv;":"≢","&nesear;":"⤨","&nesim;":"≂̸","&nexist;":"∄","&nexists;":"∄","&nfr;":"\uD835\uDD2B","&ngE;":"≧̸","&nge;":"≱","&ngeq;":"≱","&ngeqq;":"≧̸","&ngeqslant;":"⩾̸","&nges;":"⩾̸","&ngsim;":"≵","&ngt;":"≯","&ngtr;":"≯","&nhArr;":"⇎","&nharr;":"↮","&nhpar;":"⫲","&ni;":"∋","&nis;":"⋼","&nisd;":"⋺","&niv;":"∋","&njcy;":"њ","&nlArr;":"⇍","&nlE;":"≦̸","&nlarr;":"↚","&nldr;":"‥","&nle;":"≰","&nleftarrow;":"↚","&nleftrightarrow;":"↮","&nleq;":"≰","&nleqq;":"≦̸","&nleqslant;":"⩽̸","&nles;":"⩽̸","&nless;":"≮","&nlsim;":"≴","&nlt;":"≮","&nltri;":"⋪","&nltrie;":"⋬","&nmid;":"∤","&nopf;":"\uD835\uDD5F","&not":"\xac","&not;":"\xac","&notin;":"∉","&notinE;":"⋹̸","&notindot;":"⋵̸","&notinva;":"∉","&notinvb;":"⋷","&notinvc;":"⋶","&notni;":"∌","&notniva;":"∌","&notnivb;":"⋾","&notnivc;":"⋽","&npar;":"∦","&nparallel;":"∦","&nparsl;":"⫽⃥","&npart;":"∂̸","&npolint;":"⨔","&npr;":"⊀","&nprcue;":"⋠","&npre;":"⪯̸","&nprec;":"⊀","&npreceq;":"⪯̸","&nrArr;":"⇏","&nrarr;":"↛","&nrarrc;":"⤳̸","&nrarrw;":"↝̸","&nrightarrow;":"↛","&nrtri;":"⋫","&nrtrie;":"⋭","&nsc;":"⊁","&nsccue;":"⋡","&nsce;":"⪰̸","&nscr;":"\uD835\uDCC3","&nshortmid;":"∤","&nshortparallel;":"∦","&nsim;":"≁","&nsime;":"≄","&nsimeq;":"≄","&nsmid;":"∤","&nspar;":"∦","&nsqsube;":"⋢","&nsqsupe;":"⋣","&nsub;":"⊄","&nsubE;":"⫅̸","&nsube;":"⊈","&nsubset;":"⊂⃒","&nsubseteq;":"⊈","&nsubseteqq;":"⫅̸","&nsucc;":"⊁","&nsucceq;":"⪰̸","&nsup;":"⊅","&nsupE;":"⫆̸","&nsupe;":"⊉","&nsupset;":"⊃⃒","&nsupseteq;":"⊉","&nsupseteqq;":"⫆̸","&ntgl;":"≹","&ntilde":"\xf1","&ntilde;":"\xf1","&ntlg;":"≸","&ntriangleleft;":"⋪","&ntrianglelefteq;":"⋬","&ntriangleright;":"⋫","&ntrianglerighteq;":"⋭","&nu;":"ν","&num;":"#","&numero;":"№","&numsp;":" ","&nvDash;":"⊭","&nvHarr;":"⤄","&nvap;":"≍⃒","&nvdash;":"⊬","&nvge;":"≥⃒","&nvgt;":">⃒","&nvinfin;":"⧞","&nvlArr;":"⤂","&nvle;":"≤⃒","&nvlt;":"<⃒","&nvltrie;":"⊴⃒","&nvrArr;":"⤃","&nvrtrie;":"⊵⃒","&nvsim;":"∼⃒","&nwArr;":"⇖","&nwarhk;":"⤣","&nwarr;":"↖","&nwarrow;":"↖","&nwnear;":"⤧","&oS;":"Ⓢ","&oacute":"\xf3","&oacute;":"\xf3","&oast;":"⊛","&ocir;":"⊚","&ocirc":"\xf4","&ocirc;":"\xf4","&ocy;":"о","&odash;":"⊝","&odblac;":"ő","&odiv;":"⨸","&odot;":"⊙","&odsold;":"⦼","&oelig;":"œ","&ofcir;":"⦿","&ofr;":"\uD835\uDD2C","&ogon;":"˛","&ograve":"\xf2","&ograve;":"\xf2","&ogt;":"⧁","&ohbar;":"⦵","&ohm;":"Ω","&oint;":"∮","&olarr;":"↺","&olcir;":"⦾","&olcross;":"⦻","&oline;":"‾","&olt;":"⧀","&omacr;":"ō","&omega;":"ω","&omicron;":"ο","&omid;":"⦶","&ominus;":"⊖","&oopf;":"\uD835\uDD60","&opar;":"⦷","&operp;":"⦹","&oplus;":"⊕","&or;":"∨","&orarr;":"↻","&ord;":"⩝","&order;":"ℴ","&orderof;":"ℴ","&ordf":"\xaa","&ordf;":"\xaa","&ordm":"\xba","&ordm;":"\xba","&origof;":"⊶","&oror;":"⩖","&orslope;":"⩗","&orv;":"⩛","&oscr;":"ℴ","&oslash":"\xf8","&oslash;":"\xf8","&osol;":"⊘","&otilde":"\xf5","&otilde;":"\xf5","&otimes;":"⊗","&otimesas;":"⨶","&ouml":"\xf6","&ouml;":"\xf6","&ovbar;":"⌽","&par;":"∥","&para":"\xb6","&para;":"\xb6","&parallel;":"∥","&parsim;":"⫳","&parsl;":"⫽","&part;":"∂","&pcy;":"п","&percnt;":"%","&period;":".","&permil;":"‰","&perp;":"⊥","&pertenk;":"‱","&pfr;":"\uD835\uDD2D","&phi;":"φ","&phiv;":"ϕ","&phmmat;":"ℳ","&phone;":"☎","&pi;":"π","&pitchfork;":"⋔","&piv;":"ϖ","&planck;":"ℏ","&planckh;":"ℎ","&plankv;":"ℏ","&plus;":"+","&plusacir;":"⨣","&plusb;":"⊞","&pluscir;":"⨢","&plusdo;":"∔","&plusdu;":"⨥","&pluse;":"⩲","&plusmn":"\xb1","&plusmn;":"\xb1","&plussim;":"⨦","&plustwo;":"⨧","&pm;":"\xb1","&pointint;":"⨕","&popf;":"\uD835\uDD61","&pound":"\xa3","&pound;":"\xa3","&pr;":"≺","&prE;":"⪳","&prap;":"⪷","&prcue;":"≼","&pre;":"⪯","&prec;":"≺","&precapprox;":"⪷","&preccurlyeq;":"≼","&preceq;":"⪯","&precnapprox;":"⪹","&precneqq;":"⪵","&precnsim;":"⋨","&precsim;":"≾","&prime;":"′","&primes;":"ℙ","&prnE;":"⪵","&prnap;":"⪹","&prnsim;":"⋨","&prod;":"∏","&profalar;":"⌮","&profline;":"⌒","&profsurf;":"⌓","&prop;":"∝","&propto;":"∝","&prsim;":"≾","&prurel;":"⊰","&pscr;":"\uD835\uDCC5","&psi;":"ψ","&puncsp;":" ","&qfr;":"\uD835\uDD2E","&qint;":"⨌","&qopf;":"\uD835\uDD62","&qprime;":"⁗","&qscr;":"\uD835\uDCC6","&quaternions;":"ℍ","&quatint;":"⨖","&quest;":"?","&questeq;":"≟","&quot":'"',"&quot;":'"',"&rAarr;":"⇛","&rArr;":"⇒","&rAtail;":"⤜","&rBarr;":"⤏","&rHar;":"⥤","&race;":"∽̱","&racute;":"ŕ","&radic;":"√","&raemptyv;":"⦳","&rang;":"⟩","&rangd;":"⦒","&range;":"⦥","&rangle;":"⟩","&raquo":"\xbb","&raquo;":"\xbb","&rarr;":"→","&rarrap;":"⥵","&rarrb;":"⇥","&rarrbfs;":"⤠","&rarrc;":"⤳","&rarrfs;":"⤞","&rarrhk;":"↪","&rarrlp;":"↬","&rarrpl;":"⥅","&rarrsim;":"⥴","&rarrtl;":"↣","&rarrw;":"↝","&ratail;":"⤚","&ratio;":"∶","&rationals;":"ℚ","&rbarr;":"⤍","&rbbrk;":"❳","&rbrace;":"}","&rbrack;":"]","&rbrke;":"⦌","&rbrksld;":"⦎","&rbrkslu;":"⦐","&rcaron;":"ř","&rcedil;":"ŗ","&rceil;":"⌉","&rcub;":"}","&rcy;":"р","&rdca;":"⤷","&rdldhar;":"⥩","&rdquo;":"”","&rdquor;":"”","&rdsh;":"↳","&real;":"ℜ","&realine;":"ℛ","&realpart;":"ℜ","&reals;":"ℝ","&rect;":"▭","&reg":"\xae","&reg;":"\xae","&rfisht;":"⥽","&rfloor;":"⌋","&rfr;":"\uD835\uDD2F","&rhard;":"⇁","&rharu;":"⇀","&rharul;":"⥬","&rho;":"ρ","&rhov;":"ϱ","&rightarrow;":"→","&rightarrowtail;":"↣","&rightharpoondown;":"⇁","&rightharpoonup;":"⇀","&rightleftarrows;":"⇄","&rightleftharpoons;":"⇌","&rightrightarrows;":"⇉","&rightsquigarrow;":"↝","&rightthreetimes;":"⋌","&ring;":"˚","&risingdotseq;":"≓","&rlarr;":"⇄","&rlhar;":"⇌","&rlm;":"‏","&rmoust;":"⎱","&rmoustache;":"⎱","&rnmid;":"⫮","&roang;":"⟭","&roarr;":"⇾","&robrk;":"⟧","&ropar;":"⦆","&ropf;":"\uD835\uDD63","&roplus;":"⨮","&rotimes;":"⨵","&rpar;":")","&rpargt;":"⦔","&rppolint;":"⨒","&rrarr;":"⇉","&rsaquo;":"›","&rscr;":"\uD835\uDCC7","&rsh;":"↱","&rsqb;":"]","&rsquo;":"’","&rsquor;":"’","&rthree;":"⋌","&rtimes;":"⋊","&rtri;":"▹","&rtrie;":"⊵","&rtrif;":"▸","&rtriltri;":"⧎","&ruluhar;":"⥨","&rx;":"℞","&sacute;":"ś","&sbquo;":"‚","&sc;":"≻","&scE;":"⪴","&scap;":"⪸","&scaron;":"š","&sccue;":"≽","&sce;":"⪰","&scedil;":"ş","&scirc;":"ŝ","&scnE;":"⪶","&scnap;":"⪺","&scnsim;":"⋩","&scpolint;":"⨓","&scsim;":"≿","&scy;":"с","&sdot;":"⋅","&sdotb;":"⊡","&sdote;":"⩦","&seArr;":"⇘","&searhk;":"⤥","&searr;":"↘","&searrow;":"↘","&sect":"\xa7","&sect;":"\xa7","&semi;":";","&seswar;":"⤩","&setminus;":"∖","&setmn;":"∖","&sext;":"✶","&sfr;":"\uD835\uDD30","&sfrown;":"⌢","&sharp;":"♯","&shchcy;":"щ","&shcy;":"ш","&shortmid;":"∣","&shortparallel;":"∥","&shy":"\xad","&shy;":"\xad","&sigma;":"σ","&sigmaf;":"ς","&sigmav;":"ς","&sim;":"∼","&simdot;":"⩪","&sime;":"≃","&simeq;":"≃","&simg;":"⪞","&simgE;":"⪠","&siml;":"⪝","&simlE;":"⪟","&simne;":"≆","&simplus;":"⨤","&simrarr;":"⥲","&slarr;":"←","&smallsetminus;":"∖","&smashp;":"⨳","&smeparsl;":"⧤","&smid;":"∣","&smile;":"⌣","&smt;":"⪪","&smte;":"⪬","&smtes;":"⪬︀","&softcy;":"ь","&sol;":"/","&solb;":"⧄","&solbar;":"⌿","&sopf;":"\uD835\uDD64","&spades;":"♠","&spadesuit;":"♠","&spar;":"∥","&sqcap;":"⊓","&sqcaps;":"⊓︀","&sqcup;":"⊔","&sqcups;":"⊔︀","&sqsub;":"⊏","&sqsube;":"⊑","&sqsubset;":"⊏","&sqsubseteq;":"⊑","&sqsup;":"⊐","&sqsupe;":"⊒","&sqsupset;":"⊐","&sqsupseteq;":"⊒","&squ;":"□","&square;":"□","&squarf;":"▪","&squf;":"▪","&srarr;":"→","&sscr;":"\uD835\uDCC8","&ssetmn;":"∖","&ssmile;":"⌣","&sstarf;":"⋆","&star;":"☆","&starf;":"★","&straightepsilon;":"ϵ","&straightphi;":"ϕ","&strns;":"\xaf","&sub;":"⊂","&subE;":"⫅","&subdot;":"⪽","&sube;":"⊆","&subedot;":"⫃","&submult;":"⫁","&subnE;":"⫋","&subne;":"⊊","&subplus;":"⪿","&subrarr;":"⥹","&subset;":"⊂","&subseteq;":"⊆","&subseteqq;":"⫅","&subsetneq;":"⊊","&subsetneqq;":"⫋","&subsim;":"⫇","&subsub;":"⫕","&subsup;":"⫓","&succ;":"≻","&succapprox;":"⪸","&succcurlyeq;":"≽","&succeq;":"⪰","&succnapprox;":"⪺","&succneqq;":"⪶","&succnsim;":"⋩","&succsim;":"≿","&sum;":"∑","&sung;":"♪","&sup1":"\xb9","&sup1;":"\xb9","&sup2":"\xb2","&sup2;":"\xb2","&sup3":"\xb3","&sup3;":"\xb3","&sup;":"⊃","&supE;":"⫆","&supdot;":"⪾","&supdsub;":"⫘","&supe;":"⊇","&supedot;":"⫄","&suphsol;":"⟉","&suphsub;":"⫗","&suplarr;":"⥻","&supmult;":"⫂","&supnE;":"⫌","&supne;":"⊋","&supplus;":"⫀","&supset;":"⊃","&supseteq;":"⊇","&supseteqq;":"⫆","&supsetneq;":"⊋","&supsetneqq;":"⫌","&supsim;":"⫈","&supsub;":"⫔","&supsup;":"⫖","&swArr;":"⇙","&swarhk;":"⤦","&swarr;":"↙","&swarrow;":"↙","&swnwar;":"⤪","&szlig":"\xdf","&szlig;":"\xdf","&target;":"⌖","&tau;":"τ","&tbrk;":"⎴","&tcaron;":"ť","&tcedil;":"ţ","&tcy;":"т","&tdot;":"⃛","&telrec;":"⌕","&tfr;":"\uD835\uDD31","&there4;":"∴","&therefore;":"∴","&theta;":"θ","&thetasym;":"ϑ","&thetav;":"ϑ","&thickapprox;":"≈","&thicksim;":"∼","&thinsp;":" ","&thkap;":"≈","&thksim;":"∼","&thorn":"\xfe","&thorn;":"\xfe","&tilde;":"˜","&times":"\xd7","&times;":"\xd7","&timesb;":"⊠","&timesbar;":"⨱","&timesd;":"⨰","&tint;":"∭","&toea;":"⤨","&top;":"⊤","&topbot;":"⌶","&topcir;":"⫱","&topf;":"\uD835\uDD65","&topfork;":"⫚","&tosa;":"⤩","&tprime;":"‴","&trade;":"™","&triangle;":"▵","&triangledown;":"▿","&triangleleft;":"◃","&trianglelefteq;":"⊴","&triangleq;":"≜","&triangleright;":"▹","&trianglerighteq;":"⊵","&tridot;":"◬","&trie;":"≜","&triminus;":"⨺","&triplus;":"⨹","&trisb;":"⧍","&tritime;":"⨻","&trpezium;":"⏢","&tscr;":"\uD835\uDCC9","&tscy;":"ц","&tshcy;":"ћ","&tstrok;":"ŧ","&twixt;":"≬","&twoheadleftarrow;":"↞","&twoheadrightarrow;":"↠","&uArr;":"⇑","&uHar;":"⥣","&uacute":"\xfa","&uacute;":"\xfa","&uarr;":"↑","&ubrcy;":"ў","&ubreve;":"ŭ","&ucirc":"\xfb","&ucirc;":"\xfb","&ucy;":"у","&udarr;":"⇅","&udblac;":"ű","&udhar;":"⥮","&ufisht;":"⥾","&ufr;":"\uD835\uDD32","&ugrave":"\xf9","&ugrave;":"\xf9","&uharl;":"↿","&uharr;":"↾","&uhblk;":"▀","&ulcorn;":"⌜","&ulcorner;":"⌜","&ulcrop;":"⌏","&ultri;":"◸","&umacr;":"ū","&uml":"\xa8","&uml;":"\xa8","&uogon;":"ų","&uopf;":"\uD835\uDD66","&uparrow;":"↑","&updownarrow;":"↕","&upharpoonleft;":"↿","&upharpoonright;":"↾","&uplus;":"⊎","&upsi;":"υ","&upsih;":"ϒ","&upsilon;":"υ","&upuparrows;":"⇈","&urcorn;":"⌝","&urcorner;":"⌝","&urcrop;":"⌎","&uring;":"ů","&urtri;":"◹","&uscr;":"\uD835\uDCCA","&utdot;":"⋰","&utilde;":"ũ","&utri;":"▵","&utrif;":"▴","&uuarr;":"⇈","&uuml":"\xfc","&uuml;":"\xfc","&uwangle;":"⦧","&vArr;":"⇕","&vBar;":"⫨","&vBarv;":"⫩","&vDash;":"⊨","&vangrt;":"⦜","&varepsilon;":"ϵ","&varkappa;":"ϰ","&varnothing;":"∅","&varphi;":"ϕ","&varpi;":"ϖ","&varpropto;":"∝","&varr;":"↕","&varrho;":"ϱ","&varsigma;":"ς","&varsubsetneq;":"⊊︀","&varsubsetneqq;":"⫋︀","&varsupsetneq;":"⊋︀","&varsupsetneqq;":"⫌︀","&vartheta;":"ϑ","&vartriangleleft;":"⊲","&vartriangleright;":"⊳","&vcy;":"в","&vdash;":"⊢","&vee;":"∨","&veebar;":"⊻","&veeeq;":"≚","&vellip;":"⋮","&verbar;":"|","&vert;":"|","&vfr;":"\uD835\uDD33","&vltri;":"⊲","&vnsub;":"⊂⃒","&vnsup;":"⊃⃒","&vopf;":"\uD835\uDD67","&vprop;":"∝","&vrtri;":"⊳","&vscr;":"\uD835\uDCCB","&vsubnE;":"⫋︀","&vsubne;":"⊊︀","&vsupnE;":"⫌︀","&vsupne;":"⊋︀","&vzigzag;":"⦚","&wcirc;":"ŵ","&wedbar;":"⩟","&wedge;":"∧","&wedgeq;":"≙","&weierp;":"℘","&wfr;":"\uD835\uDD34","&wopf;":"\uD835\uDD68","&wp;":"℘","&wr;":"≀","&wreath;":"≀","&wscr;":"\uD835\uDCCC","&xcap;":"⋂","&xcirc;":"◯","&xcup;":"⋃","&xdtri;":"▽","&xfr;":"\uD835\uDD35","&xhArr;":"⟺","&xharr;":"⟷","&xi;":"ξ","&xlArr;":"⟸","&xlarr;":"⟵","&xmap;":"⟼","&xnis;":"⋻","&xodot;":"⨀","&xopf;":"\uD835\uDD69","&xoplus;":"⨁","&xotime;":"⨂","&xrArr;":"⟹","&xrarr;":"⟶","&xscr;":"\uD835\uDCCD","&xsqcup;":"⨆","&xuplus;":"⨄","&xutri;":"△","&xvee;":"⋁","&xwedge;":"⋀","&yacute":"\xfd","&yacute;":"\xfd","&yacy;":"я","&ycirc;":"ŷ","&ycy;":"ы","&yen":"\xa5","&yen;":"\xa5","&yfr;":"\uD835\uDD36","&yicy;":"ї","&yopf;":"\uD835\uDD6A","&yscr;":"\uD835\uDCCE","&yucy;":"ю","&yuml":"\xff","&yuml;":"\xff","&zacute;":"ź","&zcaron;":"ž","&zcy;":"з","&zdot;":"ż","&zeetrf;":"ℨ","&zeta;":"ζ","&zfr;":"\uD835\uDD37","&zhcy;":"ж","&zigrarr;":"⇝","&zopf;":"\uD835\uDD6B","&zscr;":"\uD835\uDCCF","&zwj;":"‍","&zwnj;":"‌"},characters:{Æ:"&AElig;","&":"&amp;",Á:"&Aacute;",Ă:"&Abreve;",Â:"&Acirc;",А:"&Acy;",𝔄:"&Afr;",À:"&Agrave;",Α:"&Alpha;",Ā:"&Amacr;","⩓":"&And;",Ą:"&Aogon;",𝔸:"&Aopf;","⁡":"&af;",Å:"&angst;",𝒜:"&Ascr;","≔":"&coloneq;",Ã:"&Atilde;",Ä:"&Auml;","∖":"&ssetmn;","⫧":"&Barv;","⌆":"&doublebarwedge;",Б:"&Bcy;","∵":"&because;",ℬ:"&bernou;",Β:"&Beta;",𝔅:"&Bfr;",𝔹:"&Bopf;","˘":"&breve;","≎":"&bump;",Ч:"&CHcy;","\xa9":"&copy;",Ć:"&Cacute;","⋒":"&Cap;",ⅅ:"&DD;",ℭ:"&Cfr;",Č:"&Ccaron;",Ç:"&Ccedil;",Ĉ:"&Ccirc;","∰":"&Cconint;",Ċ:"&Cdot;","\xb8":"&cedil;","\xb7":"&middot;",Χ:"&Chi;","⊙":"&odot;","⊖":"&ominus;","⊕":"&oplus;","⊗":"&otimes;","∲":"&cwconint;","”":"&rdquor;","’":"&rsquor;","∷":"&Proportion;","⩴":"&Colone;","≡":"&equiv;","∯":"&DoubleContourIntegral;","∮":"&oint;",ℂ:"&complexes;","∐":"&coprod;","∳":"&awconint;","⨯":"&Cross;",𝒞:"&Cscr;","⋓":"&Cup;","≍":"&asympeq;","⤑":"&DDotrahd;",Ђ:"&DJcy;",Ѕ:"&DScy;",Џ:"&DZcy;","‡":"&ddagger;","↡":"&Darr;","⫤":"&DoubleLeftTee;",Ď:"&Dcaron;",Д:"&Dcy;","∇":"&nabla;",Δ:"&Delta;",𝔇:"&Dfr;","\xb4":"&acute;","˙":"&dot;","˝":"&dblac;","`":"&grave;","˜":"&tilde;","⋄":"&diamond;",ⅆ:"&dd;",𝔻:"&Dopf;","\xa8":"&uml;","⃜":"&DotDot;","≐":"&esdot;","⇓":"&dArr;","⇐":"&lArr;","⇔":"&iff;","⟸":"&xlArr;","⟺":"&xhArr;","⟹":"&xrArr;","⇒":"&rArr;","⊨":"&vDash;","⇑":"&uArr;","⇕":"&vArr;","∥":"&spar;","↓":"&downarrow;","⤓":"&DownArrowBar;","⇵":"&duarr;","̑":"&DownBreve;","⥐":"&DownLeftRightVector;","⥞":"&DownLeftTeeVector;","↽":"&lhard;","⥖":"&DownLeftVectorBar;","⥟":"&DownRightTeeVector;","⇁":"&rightharpoondown;","⥗":"&DownRightVectorBar;","⊤":"&top;","↧":"&mapstodown;",𝒟:"&Dscr;",Đ:"&Dstrok;",Ŋ:"&ENG;",Ð:"&ETH;",É:"&Eacute;",Ě:"&Ecaron;",Ê:"&Ecirc;",Э:"&Ecy;",Ė:"&Edot;",𝔈:"&Efr;",È:"&Egrave;","∈":"&isinv;",Ē:"&Emacr;","◻":"&EmptySmallSquare;","▫":"&EmptyVerySmallSquare;",Ę:"&Eogon;",𝔼:"&Eopf;",Ε:"&Epsilon;","⩵":"&Equal;","≂":"&esim;","⇌":"&rlhar;",ℰ:"&expectation;","⩳":"&Esim;",Η:"&Eta;",Ë:"&Euml;","∃":"&exist;",ⅇ:"&exponentiale;",Ф:"&Fcy;",𝔉:"&Ffr;","◼":"&FilledSmallSquare;","▪":"&squf;",𝔽:"&Fopf;","∀":"&forall;",ℱ:"&Fscr;",Ѓ:"&GJcy;",">":"&gt;",Γ:"&Gamma;",Ϝ:"&Gammad;",Ğ:"&Gbreve;",Ģ:"&Gcedil;",Ĝ:"&Gcirc;",Г:"&Gcy;",Ġ:"&Gdot;",𝔊:"&Gfr;","⋙":"&ggg;",𝔾:"&Gopf;","≥":"&geq;","⋛":"&gtreqless;","≧":"&geqq;","⪢":"&GreaterGreater;","≷":"&gtrless;","⩾":"&ges;","≳":"&gtrsim;",𝒢:"&Gscr;","≫":"&gg;",Ъ:"&HARDcy;",ˇ:"&caron;","^":"&Hat;",Ĥ:"&Hcirc;",ℌ:"&Poincareplane;",ℋ:"&hamilt;",ℍ:"&quaternions;","─":"&boxh;",Ħ:"&Hstrok;","≏":"&bumpeq;",Е:"&IEcy;",Ĳ:"&IJlig;",Ё:"&IOcy;",Í:"&Iacute;",Î:"&Icirc;",И:"&Icy;",İ:"&Idot;",ℑ:"&imagpart;",Ì:"&Igrave;",Ī:"&Imacr;",ⅈ:"&ii;","∬":"&Int;","∫":"&int;","⋂":"&xcap;","⁣":"&ic;","⁢":"&it;",Į:"&Iogon;",𝕀:"&Iopf;",Ι:"&Iota;",ℐ:"&imagline;",Ĩ:"&Itilde;",І:"&Iukcy;",Ï:"&Iuml;",Ĵ:"&Jcirc;",Й:"&Jcy;",𝔍:"&Jfr;",𝕁:"&Jopf;",𝒥:"&Jscr;",Ј:"&Jsercy;",Є:"&Jukcy;",Х:"&KHcy;",Ќ:"&KJcy;",Κ:"&Kappa;",Ķ:"&Kcedil;",К:"&Kcy;",𝔎:"&Kfr;",𝕂:"&Kopf;",𝒦:"&Kscr;",Љ:"&LJcy;","<":"&lt;",Ĺ:"&Lacute;",Λ:"&Lambda;","⟪":"&Lang;",ℒ:"&lagran;","↞":"&twoheadleftarrow;",Ľ:"&Lcaron;",Ļ:"&Lcedil;",Л:"&Lcy;","⟨":"&langle;","←":"&slarr;","⇤":"&larrb;","⇆":"&lrarr;","⌈":"&lceil;","⟦":"&lobrk;","⥡":"&LeftDownTeeVector;","⇃":"&downharpoonleft;","⥙":"&LeftDownVectorBar;","⌊":"&lfloor;","↔":"&leftrightarrow;","⥎":"&LeftRightVector;","⊣":"&dashv;","↤":"&mapstoleft;","⥚":"&LeftTeeVector;","⊲":"&vltri;","⧏":"&LeftTriangleBar;","⊴":"&trianglelefteq;","⥑":"&LeftUpDownVector;","⥠":"&LeftUpTeeVector;","↿":"&upharpoonleft;","⥘":"&LeftUpVectorBar;","↼":"&lharu;","⥒":"&LeftVectorBar;","⋚":"&lesseqgtr;","≦":"&leqq;","≶":"&lg;","⪡":"&LessLess;","⩽":"&les;","≲":"&lsim;",𝔏:"&Lfr;","⋘":"&Ll;","⇚":"&lAarr;",Ŀ:"&Lmidot;","⟵":"&xlarr;","⟷":"&xharr;","⟶":"&xrarr;",𝕃:"&Lopf;","↙":"&swarrow;","↘":"&searrow;","↰":"&lsh;",Ł:"&Lstrok;","≪":"&ll;","⤅":"&Map;",М:"&Mcy;"," ":"&MediumSpace;",ℳ:"&phmmat;",𝔐:"&Mfr;","∓":"&mp;",𝕄:"&Mopf;",Μ:"&Mu;",Њ:"&NJcy;",Ń:"&Nacute;",Ň:"&Ncaron;",Ņ:"&Ncedil;",Н:"&Ncy;","​":"&ZeroWidthSpace;","\n":"&NewLine;",𝔑:"&Nfr;","⁠":"&NoBreak;","\xa0":"&nbsp;",ℕ:"&naturals;","⫬":"&Not;","≢":"&nequiv;","≭":"&NotCupCap;","∦":"&nspar;","∉":"&notinva;","≠":"&ne;","≂̸":"&nesim;","∄":"&nexists;","≯":"&ngtr;","≱":"&ngeq;","≧̸":"&ngeqq;","≫̸":"&nGtv;","≹":"&ntgl;","⩾̸":"&nges;","≵":"&ngsim;","≎̸":"&nbump;","≏̸":"&nbumpe;","⋪":"&ntriangleleft;","⧏̸":"&NotLeftTriangleBar;","⋬":"&ntrianglelefteq;","≮":"&nlt;","≰":"&nleq;","≸":"&ntlg;","≪̸":"&nLtv;","⩽̸":"&nles;","≴":"&nlsim;","⪢̸":"&NotNestedGreaterGreater;","⪡̸":"&NotNestedLessLess;","⊀":"&nprec;","⪯̸":"&npreceq;","⋠":"&nprcue;","∌":"&notniva;","⋫":"&ntriangleright;","⧐̸":"&NotRightTriangleBar;","⋭":"&ntrianglerighteq;","⊏̸":"&NotSquareSubset;","⋢":"&nsqsube;","⊐̸":"&NotSquareSuperset;","⋣":"&nsqsupe;","⊂⃒":"&vnsub;","⊈":"&nsubseteq;","⊁":"&nsucc;","⪰̸":"&nsucceq;","⋡":"&nsccue;","≿̸":"&NotSucceedsTilde;","⊃⃒":"&vnsup;","⊉":"&nsupseteq;","≁":"&nsim;","≄":"&nsimeq;","≇":"&ncong;","≉":"&napprox;","∤":"&nsmid;",𝒩:"&Nscr;",Ñ:"&Ntilde;",Ν:"&Nu;",Œ:"&OElig;",Ó:"&Oacute;",Ô:"&Ocirc;",О:"&Ocy;",Ő:"&Odblac;",𝔒:"&Ofr;",Ò:"&Ograve;",Ō:"&Omacr;",Ω:"&ohm;",Ο:"&Omicron;",𝕆:"&Oopf;","“":"&ldquo;","‘":"&lsquo;","⩔":"&Or;",𝒪:"&Oscr;",Ø:"&Oslash;",Õ:"&Otilde;","⨷":"&Otimes;",Ö:"&Ouml;","‾":"&oline;","⏞":"&OverBrace;","⎴":"&tbrk;","⏜":"&OverParenthesis;","∂":"&part;",П:"&Pcy;",𝔓:"&Pfr;",Φ:"&Phi;",Π:"&Pi;","\xb1":"&pm;",ℙ:"&primes;","⪻":"&Pr;","≺":"&prec;","⪯":"&preceq;","≼":"&preccurlyeq;","≾":"&prsim;","″":"&Prime;","∏":"&prod;","∝":"&vprop;",𝒫:"&Pscr;",Ψ:"&Psi;",'"':"&quot;",𝔔:"&Qfr;",ℚ:"&rationals;",𝒬:"&Qscr;","⤐":"&drbkarow;","\xae":"&reg;",Ŕ:"&Racute;","⟫":"&Rang;","↠":"&twoheadrightarrow;","⤖":"&Rarrtl;",Ř:"&Rcaron;",Ŗ:"&Rcedil;",Р:"&Rcy;",ℜ:"&realpart;","∋":"&niv;","⇋":"&lrhar;","⥯":"&duhar;",Ρ:"&Rho;","⟩":"&rangle;","→":"&srarr;","⇥":"&rarrb;","⇄":"&rlarr;","⌉":"&rceil;","⟧":"&robrk;","⥝":"&RightDownTeeVector;","⇂":"&downharpoonright;","⥕":"&RightDownVectorBar;","⌋":"&rfloor;","⊢":"&vdash;","↦":"&mapsto;","⥛":"&RightTeeVector;","⊳":"&vrtri;","⧐":"&RightTriangleBar;","⊵":"&trianglerighteq;","⥏":"&RightUpDownVector;","⥜":"&RightUpTeeVector;","↾":"&upharpoonright;","⥔":"&RightUpVectorBar;","⇀":"&rightharpoonup;","⥓":"&RightVectorBar;",ℝ:"&reals;","⥰":"&RoundImplies;","⇛":"&rAarr;",ℛ:"&realine;","↱":"&rsh;","⧴":"&RuleDelayed;",Щ:"&SHCHcy;",Ш:"&SHcy;",Ь:"&SOFTcy;",Ś:"&Sacute;","⪼":"&Sc;",Š:"&Scaron;",Ş:"&Scedil;",Ŝ:"&Scirc;",С:"&Scy;",𝔖:"&Sfr;","↑":"&uparrow;",Σ:"&Sigma;","∘":"&compfn;",𝕊:"&Sopf;","√":"&radic;","□":"&square;","⊓":"&sqcap;","⊏":"&sqsubset;","⊑":"&sqsubseteq;","⊐":"&sqsupset;","⊒":"&sqsupseteq;","⊔":"&sqcup;",𝒮:"&Sscr;","⋆":"&sstarf;","⋐":"&Subset;","⊆":"&subseteq;","≻":"&succ;","⪰":"&succeq;","≽":"&succcurlyeq;","≿":"&succsim;","∑":"&sum;","⋑":"&Supset;","⊃":"&supset;","⊇":"&supseteq;",Þ:"&THORN;","™":"&trade;",Ћ:"&TSHcy;",Ц:"&TScy;","	":"&Tab;",Τ:"&Tau;",Ť:"&Tcaron;",Ţ:"&Tcedil;",Т:"&Tcy;",𝔗:"&Tfr;","∴":"&therefore;",Θ:"&Theta;","  ":"&ThickSpace;"," ":"&thinsp;","∼":"&thksim;","≃":"&simeq;","≅":"&cong;","≈":"&thkap;",𝕋:"&Topf;","⃛":"&tdot;",𝒯:"&Tscr;",Ŧ:"&Tstrok;",Ú:"&Uacute;","↟":"&Uarr;","⥉":"&Uarrocir;",Ў:"&Ubrcy;",Ŭ:"&Ubreve;",Û:"&Ucirc;",У:"&Ucy;",Ű:"&Udblac;",𝔘:"&Ufr;",Ù:"&Ugrave;",Ū:"&Umacr;",_:"&lowbar;","⏟":"&UnderBrace;","⎵":"&bbrk;","⏝":"&UnderParenthesis;","⋃":"&xcup;","⊎":"&uplus;",Ų:"&Uogon;",𝕌:"&Uopf;","⤒":"&UpArrowBar;","⇅":"&udarr;","↕":"&varr;","⥮":"&udhar;","⊥":"&perp;","↥":"&mapstoup;","↖":"&nwarrow;","↗":"&nearrow;",ϒ:"&upsih;",Υ:"&Upsilon;",Ů:"&Uring;",𝒰:"&Uscr;",Ũ:"&Utilde;",Ü:"&Uuml;","⊫":"&VDash;","⫫":"&Vbar;",В:"&Vcy;","⊩":"&Vdash;","⫦":"&Vdashl;","⋁":"&xvee;","‖":"&Vert;","∣":"&smid;","|":"&vert;","❘":"&VerticalSeparator;","≀":"&wreath;"," ":"&hairsp;",𝔙:"&Vfr;",𝕍:"&Vopf;",𝒱:"&Vscr;","⊪":"&Vvdash;",Ŵ:"&Wcirc;","⋀":"&xwedge;",𝔚:"&Wfr;",𝕎:"&Wopf;",𝒲:"&Wscr;",𝔛:"&Xfr;",Ξ:"&Xi;",𝕏:"&Xopf;",𝒳:"&Xscr;",Я:"&YAcy;",Ї:"&YIcy;",Ю:"&YUcy;",Ý:"&Yacute;",Ŷ:"&Ycirc;",Ы:"&Ycy;",𝔜:"&Yfr;",𝕐:"&Yopf;",𝒴:"&Yscr;",Ÿ:"&Yuml;",Ж:"&ZHcy;",Ź:"&Zacute;",Ž:"&Zcaron;",З:"&Zcy;",Ż:"&Zdot;",Ζ:"&Zeta;",ℨ:"&zeetrf;",ℤ:"&integers;",𝒵:"&Zscr;",á:"&aacute;",ă:"&abreve;","∾":"&mstpos;","∾̳":"&acE;","∿":"&acd;",â:"&acirc;",а:"&acy;",æ:"&aelig;",𝔞:"&afr;",à:"&agrave;",ℵ:"&aleph;",α:"&alpha;",ā:"&amacr;","⨿":"&amalg;","∧":"&wedge;","⩕":"&andand;","⩜":"&andd;","⩘":"&andslope;","⩚":"&andv;","∠":"&angle;","⦤":"&ange;","∡":"&measuredangle;","⦨":"&angmsdaa;","⦩":"&angmsdab;","⦪":"&angmsdac;","⦫":"&angmsdad;","⦬":"&angmsdae;","⦭":"&angmsdaf;","⦮":"&angmsdag;","⦯":"&angmsdah;","∟":"&angrt;","⊾":"&angrtvb;","⦝":"&angrtvbd;","∢":"&angsph;","⍼":"&angzarr;",ą:"&aogon;",𝕒:"&aopf;","⩰":"&apE;","⩯":"&apacir;","≊":"&approxeq;","≋":"&apid;","'":"&apos;",å:"&aring;","\uD835\uDCB6":"&ascr;","*":"&midast;",ã:"&atilde;",ä:"&auml;","⨑":"&awint;","⫭":"&bNot;","≌":"&bcong;","϶":"&bepsi;","‵":"&bprime;","∽":"&bsim;","⋍":"&bsime;","⊽":"&barvee;","⌅":"&barwedge;","⎶":"&bbrktbrk;",б:"&bcy;","„":"&ldquor;","⦰":"&bemptyv;",β:"&beta;",ℶ:"&beth;","≬":"&twixt;",𝔟:"&bfr;","◯":"&xcirc;","⨀":"&xodot;","⨁":"&xoplus;","⨂":"&xotime;","⨆":"&xsqcup;","★":"&starf;","▽":"&xdtri;","△":"&xutri;","⨄":"&xuplus;","⤍":"&rbarr;","⧫":"&lozf;","▴":"&utrif;","▾":"&dtrif;","◂":"&ltrif;","▸":"&rtrif;","␣":"&blank;","▒":"&blk12;","░":"&blk14;","▓":"&blk34;","█":"&block;","=⃥":"&bne;","≡⃥":"&bnequiv;","⌐":"&bnot;",𝕓:"&bopf;","⋈":"&bowtie;","╗":"&boxDL;","╔":"&boxDR;","╖":"&boxDl;","╓":"&boxDr;","═":"&boxH;","╦":"&boxHD;","╩":"&boxHU;","╤":"&boxHd;","╧":"&boxHu;","╝":"&boxUL;","╚":"&boxUR;","╜":"&boxUl;","╙":"&boxUr;","║":"&boxV;","╬":"&boxVH;","╣":"&boxVL;","╠":"&boxVR;","╫":"&boxVh;","╢":"&boxVl;","╟":"&boxVr;","⧉":"&boxbox;","╕":"&boxdL;","╒":"&boxdR;","┐":"&boxdl;","┌":"&boxdr;","╥":"&boxhD;","╨":"&boxhU;","┬":"&boxhd;","┴":"&boxhu;","⊟":"&minusb;","⊞":"&plusb;","⊠":"&timesb;","╛":"&boxuL;","╘":"&boxuR;","┘":"&boxul;","└":"&boxur;","│":"&boxv;","╪":"&boxvH;","╡":"&boxvL;","╞":"&boxvR;","┼":"&boxvh;","┤":"&boxvl;","├":"&boxvr;","\xa6":"&brvbar;",𝒷:"&bscr;","⁏":"&bsemi;","\\":"&bsol;","⧅":"&bsolb;","⟈":"&bsolhsub;","•":"&bullet;","⪮":"&bumpE;",ć:"&cacute;","∩":"&cap;","⩄":"&capand;","⩉":"&capbrcup;","⩋":"&capcap;","⩇":"&capcup;","⩀":"&capdot;","∩︀":"&caps;","⁁":"&caret;","⩍":"&ccaps;",č:"&ccaron;",ç:"&ccedil;",ĉ:"&ccirc;","⩌":"&ccups;","⩐":"&ccupssm;",ċ:"&cdot;","⦲":"&cemptyv;","\xa2":"&cent;",𝔠:"&cfr;",ч:"&chcy;","✓":"&checkmark;",χ:"&chi;","○":"&cir;","⧃":"&cirE;",ˆ:"&circ;","≗":"&cire;","↺":"&olarr;","↻":"&orarr;","Ⓢ":"&oS;","⊛":"&oast;","⊚":"&ocir;","⊝":"&odash;","⨐":"&cirfnint;","⫯":"&cirmid;","⧂":"&cirscir;","♣":"&clubsuit;",":":"&colon;",",":"&comma;","@":"&commat;","∁":"&complement;","⩭":"&congdot;",𝕔:"&copf;","℗":"&copysr;","↵":"&crarr;","✗":"&cross;",𝒸:"&cscr;","⫏":"&csub;","⫑":"&csube;","⫐":"&csup;","⫒":"&csupe;","⋯":"&ctdot;","⤸":"&cudarrl;","⤵":"&cudarrr;","⋞":"&curlyeqprec;","⋟":"&curlyeqsucc;","↶":"&curvearrowleft;","⤽":"&cularrp;","∪":"&cup;","⩈":"&cupbrcap;","⩆":"&cupcap;","⩊":"&cupcup;","⊍":"&cupdot;","⩅":"&cupor;","∪︀":"&cups;","↷":"&curvearrowright;","⤼":"&curarrm;","⋎":"&cuvee;","⋏":"&cuwed;","\xa4":"&curren;","∱":"&cwint;","⌭":"&cylcty;","⥥":"&dHar;","†":"&dagger;",ℸ:"&daleth;","‐":"&hyphen;","⤏":"&rBarr;",ď:"&dcaron;",д:"&dcy;","⇊":"&downdownarrows;","⩷":"&eDDot;","\xb0":"&deg;",δ:"&delta;","⦱":"&demptyv;","⥿":"&dfisht;",𝔡:"&dfr;","♦":"&diams;",ϝ:"&gammad;","⋲":"&disin;","\xf7":"&divide;","⋇":"&divonx;",ђ:"&djcy;","⌞":"&llcorner;","⌍":"&dlcrop;",$:"&dollar;",𝕕:"&dopf;","≑":"&eDot;","∸":"&minusd;","∔":"&plusdo;","⊡":"&sdotb;","⌟":"&lrcorner;","⌌":"&drcrop;",𝒹:"&dscr;",ѕ:"&dscy;","⧶":"&dsol;",đ:"&dstrok;","⋱":"&dtdot;","▿":"&triangledown;","⦦":"&dwangle;",џ:"&dzcy;","⟿":"&dzigrarr;",é:"&eacute;","⩮":"&easter;",ě:"&ecaron;","≖":"&eqcirc;",ê:"&ecirc;","≕":"&eqcolon;",э:"&ecy;",ė:"&edot;","≒":"&fallingdotseq;",𝔢:"&efr;","⪚":"&eg;",è:"&egrave;","⪖":"&eqslantgtr;","⪘":"&egsdot;","⪙":"&el;","⏧":"&elinters;",ℓ:"&ell;","⪕":"&eqslantless;","⪗":"&elsdot;",ē:"&emacr;","∅":"&varnothing;"," ":"&emsp13;"," ":"&emsp14;"," ":"&emsp;",ŋ:"&eng;"," ":"&ensp;",ę:"&eogon;",𝕖:"&eopf;","⋕":"&epar;","⧣":"&eparsl;","⩱":"&eplus;",ε:"&epsilon;",ϵ:"&varepsilon;","=":"&equals;","≟":"&questeq;","⩸":"&equivDD;","⧥":"&eqvparsl;","≓":"&risingdotseq;","⥱":"&erarr;",ℯ:"&escr;",η:"&eta;",ð:"&eth;",ë:"&euml;","€":"&euro;","!":"&excl;",ф:"&fcy;","♀":"&female;",ﬃ:"&ffilig;",ﬀ:"&fflig;",ﬄ:"&ffllig;",𝔣:"&ffr;",ﬁ:"&filig;",fj:"&fjlig;","♭":"&flat;",ﬂ:"&fllig;","▱":"&fltns;",ƒ:"&fnof;",𝕗:"&fopf;","⋔":"&pitchfork;","⫙":"&forkv;","⨍":"&fpartint;","\xbd":"&half;","⅓":"&frac13;","\xbc":"&frac14;","⅕":"&frac15;","⅙":"&frac16;","⅛":"&frac18;","⅔":"&frac23;","⅖":"&frac25;","\xbe":"&frac34;","⅗":"&frac35;","⅜":"&frac38;","⅘":"&frac45;","⅚":"&frac56;","⅝":"&frac58;","⅞":"&frac78;","⁄":"&frasl;","⌢":"&sfrown;",𝒻:"&fscr;","⪌":"&gtreqqless;",ǵ:"&gacute;",γ:"&gamma;","⪆":"&gtrapprox;",ğ:"&gbreve;",ĝ:"&gcirc;",г:"&gcy;",ġ:"&gdot;","⪩":"&gescc;","⪀":"&gesdot;","⪂":"&gesdoto;","⪄":"&gesdotol;","⋛︀":"&gesl;","⪔":"&gesles;",𝔤:"&gfr;",ℷ:"&gimel;",ѓ:"&gjcy;","⪒":"&glE;","⪥":"&gla;","⪤":"&glj;","≩":"&gneqq;","⪊":"&gnapprox;","⪈":"&gneq;","⋧":"&gnsim;",𝕘:"&gopf;",ℊ:"&gscr;","⪎":"&gsime;","⪐":"&gsiml;","⪧":"&gtcc;","⩺":"&gtcir;","⋗":"&gtrdot;","⦕":"&gtlPar;","⩼":"&gtquest;","⥸":"&gtrarr;","≩︀":"&gvnE;",ъ:"&hardcy;","⥈":"&harrcir;","↭":"&leftrightsquigarrow;",ℏ:"&plankv;",ĥ:"&hcirc;","♥":"&heartsuit;","…":"&mldr;","⊹":"&hercon;",𝔥:"&hfr;","⤥":"&searhk;","⤦":"&swarhk;","⇿":"&hoarr;","∻":"&homtht;","↩":"&larrhk;","↪":"&rarrhk;",𝕙:"&hopf;","―":"&horbar;",𝒽:"&hscr;",ħ:"&hstrok;","⁃":"&hybull;",í:"&iacute;",î:"&icirc;",и:"&icy;",е:"&iecy;","\xa1":"&iexcl;",𝔦:"&ifr;",ì:"&igrave;","⨌":"&qint;","∭":"&tint;","⧜":"&iinfin;","℩":"&iiota;",ĳ:"&ijlig;",ī:"&imacr;",ı:"&inodot;","⊷":"&imof;",Ƶ:"&imped;","℅":"&incare;","∞":"&infin;","⧝":"&infintie;","⊺":"&intercal;","⨗":"&intlarhk;","⨼":"&iprod;",ё:"&iocy;",į:"&iogon;",𝕚:"&iopf;",ι:"&iota;","\xbf":"&iquest;",𝒾:"&iscr;","⋹":"&isinE;","⋵":"&isindot;","⋴":"&isins;","⋳":"&isinsv;",ĩ:"&itilde;",і:"&iukcy;",ï:"&iuml;",ĵ:"&jcirc;",й:"&jcy;",𝔧:"&jfr;",ȷ:"&jmath;",𝕛:"&jopf;",𝒿:"&jscr;",ј:"&jsercy;",є:"&jukcy;",κ:"&kappa;",ϰ:"&varkappa;",ķ:"&kcedil;",к:"&kcy;",𝔨:"&kfr;",ĸ:"&kgreen;",х:"&khcy;",ќ:"&kjcy;",𝕜:"&kopf;",𝓀:"&kscr;","⤛":"&lAtail;","⤎":"&lBarr;","⪋":"&lesseqqgtr;","⥢":"&lHar;",ĺ:"&lacute;","⦴":"&laemptyv;",λ:"&lambda;","⦑":"&langd;","⪅":"&lessapprox;","\xab":"&laquo;","⤟":"&larrbfs;","⤝":"&larrfs;","↫":"&looparrowleft;","⤹":"&larrpl;","⥳":"&larrsim;","↢":"&leftarrowtail;","⪫":"&lat;","⤙":"&latail;","⪭":"&late;","⪭︀":"&lates;","⤌":"&lbarr;","❲":"&lbbrk;","{":"&lcub;","[":"&lsqb;","⦋":"&lbrke;","⦏":"&lbrksld;","⦍":"&lbrkslu;",ľ:"&lcaron;",ļ:"&lcedil;",л:"&lcy;","⤶":"&ldca;","⥧":"&ldrdhar;","⥋":"&ldrushar;","↲":"&ldsh;","≤":"&leq;","⇇":"&llarr;","⋋":"&lthree;","⪨":"&lescc;","⩿":"&lesdot;","⪁":"&lesdoto;","⪃":"&lesdotor;","⋚︀":"&lesg;","⪓":"&lesges;","⋖":"&ltdot;","⥼":"&lfisht;",𝔩:"&lfr;","⪑":"&lgE;","⥪":"&lharul;","▄":"&lhblk;",љ:"&ljcy;","⥫":"&llhard;","◺":"&lltri;",ŀ:"&lmidot;","⎰":"&lmoustache;","≨":"&lneqq;","⪉":"&lnapprox;","⪇":"&lneq;","⋦":"&lnsim;","⟬":"&loang;","⇽":"&loarr;","⟼":"&xmap;","↬":"&rarrlp;","⦅":"&lopar;",𝕝:"&lopf;","⨭":"&loplus;","⨴":"&lotimes;","∗":"&lowast;","◊":"&lozenge;","(":"&lpar;","⦓":"&lparlt;","⥭":"&lrhard;","‎":"&lrm;","⊿":"&lrtri;","‹":"&lsaquo;",𝓁:"&lscr;","⪍":"&lsime;","⪏":"&lsimg;","‚":"&sbquo;",ł:"&lstrok;","⪦":"&ltcc;","⩹":"&ltcir;","⋉":"&ltimes;","⥶":"&ltlarr;","⩻":"&ltquest;","⦖":"&ltrPar;","◃":"&triangleleft;","⥊":"&lurdshar;","⥦":"&luruhar;","≨︀":"&lvnE;","∺":"&mDDot;","\xaf":"&strns;","♂":"&male;","✠":"&maltese;","▮":"&marker;","⨩":"&mcomma;",м:"&mcy;","—":"&mdash;",𝔪:"&mfr;","℧":"&mho;",µ:"&micro;","⫰":"&midcir;","−":"&minus;","⨪":"&minusdu;","⫛":"&mlcp;","⊧":"&models;",𝕞:"&mopf;",𝓂:"&mscr;",μ:"&mu;","⊸":"&mumap;","⋙̸":"&nGg;","≫⃒":"&nGt;","⇍":"&nlArr;","⇎":"&nhArr;","⋘̸":"&nLl;","≪⃒":"&nLt;","⇏":"&nrArr;","⊯":"&nVDash;","⊮":"&nVdash;",ń:"&nacute;","∠⃒":"&nang;","⩰̸":"&napE;","≋̸":"&napid;",ŉ:"&napos;","♮":"&natural;","⩃":"&ncap;",ň:"&ncaron;",ņ:"&ncedil;","⩭̸":"&ncongdot;","⩂":"&ncup;",н:"&ncy;","–":"&ndash;","⇗":"&neArr;","⤤":"&nearhk;","≐̸":"&nedot;","⤨":"&toea;",𝔫:"&nfr;","↮":"&nleftrightarrow;","⫲":"&nhpar;","⋼":"&nis;","⋺":"&nisd;",њ:"&njcy;","≦̸":"&nleqq;","↚":"&nleftarrow;","‥":"&nldr;",𝕟:"&nopf;","\xac":"&not;","⋹̸":"&notinE;","⋵̸":"&notindot;","⋷":"&notinvb;","⋶":"&notinvc;","⋾":"&notnivb;","⋽":"&notnivc;","⫽⃥":"&nparsl;","∂̸":"&npart;","⨔":"&npolint;","↛":"&nrightarrow;","⤳̸":"&nrarrc;","↝̸":"&nrarrw;",𝓃:"&nscr;","⊄":"&nsub;","⫅̸":"&nsubseteqq;","⊅":"&nsup;","⫆̸":"&nsupseteqq;",ñ:"&ntilde;",ν:"&nu;","#":"&num;","№":"&numero;"," ":"&numsp;","⊭":"&nvDash;","⤄":"&nvHarr;","≍⃒":"&nvap;","⊬":"&nvdash;","≥⃒":"&nvge;",">⃒":"&nvgt;","⧞":"&nvinfin;","⤂":"&nvlArr;","≤⃒":"&nvle;","<⃒":"&nvlt;","⊴⃒":"&nvltrie;","⤃":"&nvrArr;","⊵⃒":"&nvrtrie;","∼⃒":"&nvsim;","⇖":"&nwArr;","⤣":"&nwarhk;","⤧":"&nwnear;",ó:"&oacute;",ô:"&ocirc;",о:"&ocy;",ő:"&odblac;","⨸":"&odiv;","⦼":"&odsold;",œ:"&oelig;","⦿":"&ofcir;",𝔬:"&ofr;","˛":"&ogon;",ò:"&ograve;","⧁":"&ogt;","⦵":"&ohbar;","⦾":"&olcir;","⦻":"&olcross;","⧀":"&olt;",ō:"&omacr;",ω:"&omega;",ο:"&omicron;","⦶":"&omid;",𝕠:"&oopf;","⦷":"&opar;","⦹":"&operp;","∨":"&vee;","⩝":"&ord;",ℴ:"&oscr;",ª:"&ordf;",º:"&ordm;","⊶":"&origof;","⩖":"&oror;","⩗":"&orslope;","⩛":"&orv;",ø:"&oslash;","⊘":"&osol;",õ:"&otilde;","⨶":"&otimesas;",ö:"&ouml;","⌽":"&ovbar;","\xb6":"&para;","⫳":"&parsim;","⫽":"&parsl;",п:"&pcy;","%":"&percnt;",".":"&period;","‰":"&permil;","‱":"&pertenk;",𝔭:"&pfr;",φ:"&phi;",ϕ:"&varphi;","☎":"&phone;",π:"&pi;",ϖ:"&varpi;",ℎ:"&planckh;","+":"&plus;","⨣":"&plusacir;","⨢":"&pluscir;","⨥":"&plusdu;","⩲":"&pluse;","⨦":"&plussim;","⨧":"&plustwo;","⨕":"&pointint;",𝕡:"&popf;","\xa3":"&pound;","⪳":"&prE;","⪷":"&precapprox;","⪹":"&prnap;","⪵":"&prnE;","⋨":"&prnsim;","′":"&prime;","⌮":"&profalar;","⌒":"&profline;","⌓":"&profsurf;","⊰":"&prurel;",𝓅:"&pscr;",ψ:"&psi;"," ":"&puncsp;",𝔮:"&qfr;",𝕢:"&qopf;","⁗":"&qprime;",𝓆:"&qscr;","⨖":"&quatint;","?":"&quest;","⤜":"&rAtail;","⥤":"&rHar;","∽̱":"&race;",ŕ:"&racute;","⦳":"&raemptyv;","⦒":"&rangd;","⦥":"&range;","\xbb":"&raquo;","⥵":"&rarrap;","⤠":"&rarrbfs;","⤳":"&rarrc;","⤞":"&rarrfs;","⥅":"&rarrpl;","⥴":"&rarrsim;","↣":"&rightarrowtail;","↝":"&rightsquigarrow;","⤚":"&ratail;","∶":"&ratio;","❳":"&rbbrk;","}":"&rcub;","]":"&rsqb;","⦌":"&rbrke;","⦎":"&rbrksld;","⦐":"&rbrkslu;",ř:"&rcaron;",ŗ:"&rcedil;",р:"&rcy;","⤷":"&rdca;","⥩":"&rdldhar;","↳":"&rdsh;","▭":"&rect;","⥽":"&rfisht;",𝔯:"&rfr;","⥬":"&rharul;",ρ:"&rho;",ϱ:"&varrho;","⇉":"&rrarr;","⋌":"&rthree;","˚":"&ring;","‏":"&rlm;","⎱":"&rmoustache;","⫮":"&rnmid;","⟭":"&roang;","⇾":"&roarr;","⦆":"&ropar;",𝕣:"&ropf;","⨮":"&roplus;","⨵":"&rotimes;",")":"&rpar;","⦔":"&rpargt;","⨒":"&rppolint;","›":"&rsaquo;",𝓇:"&rscr;","⋊":"&rtimes;","▹":"&triangleright;","⧎":"&rtriltri;","⥨":"&ruluhar;","℞":"&rx;",ś:"&sacute;","⪴":"&scE;","⪸":"&succapprox;",š:"&scaron;",ş:"&scedil;",ŝ:"&scirc;","⪶":"&succneqq;","⪺":"&succnapprox;","⋩":"&succnsim;","⨓":"&scpolint;",с:"&scy;","⋅":"&sdot;","⩦":"&sdote;","⇘":"&seArr;","\xa7":"&sect;",";":"&semi;","⤩":"&tosa;","✶":"&sext;",𝔰:"&sfr;","♯":"&sharp;",щ:"&shchcy;",ш:"&shcy;","\xad":"&shy;",σ:"&sigma;",ς:"&varsigma;","⩪":"&simdot;","⪞":"&simg;","⪠":"&simgE;","⪝":"&siml;","⪟":"&simlE;","≆":"&simne;","⨤":"&simplus;","⥲":"&simrarr;","⨳":"&smashp;","⧤":"&smeparsl;","⌣":"&ssmile;","⪪":"&smt;","⪬":"&smte;","⪬︀":"&smtes;",ь:"&softcy;","/":"&sol;","⧄":"&solb;","⌿":"&solbar;",𝕤:"&sopf;","♠":"&spadesuit;","⊓︀":"&sqcaps;","⊔︀":"&sqcups;",𝓈:"&sscr;","☆":"&star;","⊂":"&subset;","⫅":"&subseteqq;","⪽":"&subdot;","⫃":"&subedot;","⫁":"&submult;","⫋":"&subsetneqq;","⊊":"&subsetneq;","⪿":"&subplus;","⥹":"&subrarr;","⫇":"&subsim;","⫕":"&subsub;","⫓":"&subsup;","♪":"&sung;","\xb9":"&sup1;","\xb2":"&sup2;","\xb3":"&sup3;","⫆":"&supseteqq;","⪾":"&supdot;","⫘":"&supdsub;","⫄":"&supedot;","⟉":"&suphsol;","⫗":"&suphsub;","⥻":"&suplarr;","⫂":"&supmult;","⫌":"&supsetneqq;","⊋":"&supsetneq;","⫀":"&supplus;","⫈":"&supsim;","⫔":"&supsub;","⫖":"&supsup;","⇙":"&swArr;","⤪":"&swnwar;",ß:"&szlig;","⌖":"&target;",τ:"&tau;",ť:"&tcaron;",ţ:"&tcedil;",т:"&tcy;","⌕":"&telrec;",𝔱:"&tfr;",θ:"&theta;",ϑ:"&vartheta;",þ:"&thorn;","\xd7":"&times;","⨱":"&timesbar;","⨰":"&timesd;","⌶":"&topbot;","⫱":"&topcir;",𝕥:"&topf;","⫚":"&topfork;","‴":"&tprime;","▵":"&utri;","≜":"&trie;","◬":"&tridot;","⨺":"&triminus;","⨹":"&triplus;","⧍":"&trisb;","⨻":"&tritime;","⏢":"&trpezium;",𝓉:"&tscr;",ц:"&tscy;",ћ:"&tshcy;",ŧ:"&tstrok;","⥣":"&uHar;",ú:"&uacute;",ў:"&ubrcy;",ŭ:"&ubreve;",û:"&ucirc;",у:"&ucy;",ű:"&udblac;","⥾":"&ufisht;",𝔲:"&ufr;",ù:"&ugrave;","▀":"&uhblk;","⌜":"&ulcorner;","⌏":"&ulcrop;","◸":"&ultri;",ū:"&umacr;",ų:"&uogon;",𝕦:"&uopf;",υ:"&upsilon;","⇈":"&uuarr;","⌝":"&urcorner;","⌎":"&urcrop;",ů:"&uring;","◹":"&urtri;",𝓊:"&uscr;","⋰":"&utdot;",ũ:"&utilde;",ü:"&uuml;","⦧":"&uwangle;","⫨":"&vBar;","⫩":"&vBarv;","⦜":"&vangrt;","⊊︀":"&vsubne;","⫋︀":"&vsubnE;","⊋︀":"&vsupne;","⫌︀":"&vsupnE;",в:"&vcy;","⊻":"&veebar;","≚":"&veeeq;","⋮":"&vellip;",𝔳:"&vfr;",𝕧:"&vopf;",𝓋:"&vscr;","⦚":"&vzigzag;",ŵ:"&wcirc;","⩟":"&wedbar;","≙":"&wedgeq;",℘:"&wp;",𝔴:"&wfr;",𝕨:"&wopf;",𝓌:"&wscr;",𝔵:"&xfr;",ξ:"&xi;","⋻":"&xnis;",𝕩:"&xopf;",𝓍:"&xscr;",ý:"&yacute;",я:"&yacy;",ŷ:"&ycirc;",ы:"&ycy;","\xa5":"&yen;",𝔶:"&yfr;",ї:"&yicy;",𝕪:"&yopf;",𝓎:"&yscr;",ю:"&yucy;",ÿ:"&yuml;",ź:"&zacute;",ž:"&zcaron;",з:"&zcy;",ż:"&zdot;",ζ:"&zeta;",𝔷:"&zfr;",ж:"&zhcy;","⇝":"&zigrarr;",𝕫:"&zopf;",𝓏:"&zscr;","‍":"&zwj;","‌":"&zwnj;"}}}}}),A=$({"../../node_modules/html-entities/lib/numeric-unicode-map.js"(u){Object.defineProperty(u,"__esModule",{value:!0}),u.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}}}),f=$({"../../node_modules/html-entities/lib/surrogate-pairs.js"(u){Object.defineProperty(u,"__esModule",{value:!0}),u.fromCodePoint=String.fromCodePoint||function(u){return String.fromCharCode(Math.floor((u-65536)/1024)+55296,(u-65536)%1024+56320)},u.getCodePoint=String.prototype.codePointAt?function(u,e){return u.codePointAt(e)}:function(u,e){return(u.charCodeAt(e)-55296)*1024+u.charCodeAt(e+1)-56320+65536},u.highSurrogateFrom=55296,u.highSurrogateTo=56319}}),d=$({"../../node_modules/html-entities/lib/index.js"(u){var e=u&&u.__assign||function(){return(e=Object.assign||function(u){for(var e,r=1,t=arguments.length;r<t;r++)for(var a in e=arguments[r])Object.prototype.hasOwnProperty.call(e,a)&&(u[a]=e[a]);return u}).apply(this,arguments)};Object.defineProperty(u,"__esModule",{value:!0});var r=g(),t=A(),a=f(),n=e(e({},r.namedReferences),{all:r.namedReferences.html5}),s={specialChars:/[<>'"&]/g,nonAscii:/(?:[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,nonAsciiPrintable:/(?:[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,extensive:/(?:[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g},i={mode:"specialChars",level:"all",numeric:"decimal"};u.encode=function(u,e){var r=void 0===e?i:e,t=r.mode,o=void 0===t?"specialChars":t,l=r.numeric,c=void 0===l?"decimal":l,$=r.level;if(!u)return"";var p=s[o],_=n[void 0===$?"all":$].characters,g="hexadecimal"===c;p.lastIndex=0;var r=p.exec(u);if(r){t="";var l=0;do{l!==r.index&&(t+=u.substring(l,r.index));var $=r[0],A=_[$];if(!A){var f=$.length>1?a.getCodePoint($,0):$.charCodeAt(0);A=(g?"&#x"+f.toString(16):"&#"+f)+";"}t+=A,l=r.index+$.length}while(r=p.exec(u));l!==u.length&&(t+=u.substring(l))}else t=u;return t};var o={scope:"body",level:"all"},l=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g,c=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g,$={xml:{strict:l,attribute:c,body:r.bodyRegExps.xml},html4:{strict:l,attribute:c,body:r.bodyRegExps.html4},html5:{strict:l,attribute:c,body:r.bodyRegExps.html5}},p=e(e({},$),{all:$.html5}),_=String.fromCharCode,d=_(65533),m={level:"all"};u.decodeEntity=function(u,e){var r=(void 0===e?m:e).level,s=void 0===r?"all":r;if(!u)return"";var r=u;u[u.length-1];var i=n[s].entities[u];if(i)r=i;else if("&"===u[0]&&"#"===u[1]){var o=u[2],l="x"==o||"X"==o?parseInt(u.substr(3),16):parseInt(u.substr(2));r=l>=1114111?d:l>65535?a.fromCodePoint(l):_(t.numericUnicodeMap[l]||l)}return r},u.decode=function(u,e){var r,s=void 0===e?o:e,i=s.level,l=void 0===i?"all":i,c=s.scope,$=void 0===c?"xml"===l?"strict":"body":c;if(!u)return"";var g=p[l][$],A=n[l].entities,f="attribute"===$,m="strict"===$;g.lastIndex=0;var h=g.exec(u);if(h){r="";var D=0;do{D!==h.index&&(r+=u.substring(D,h.index));var b=h[0],x=b,B=b[b.length-1];if(f&&"="===B)x=b;else if(m&&";"!==B)x=b;else{var y=A[b];if(y)x=y;else if("&"===b[0]&&"#"===b[1]){var C=b[2],E="x"==C||"X"==C?parseInt(b.substr(3),16):parseInt(b.substr(2));x=E>=1114111?d:E>65535?a.fromCodePoint(E):_(t.numericUnicodeMap[E]||E)}}r+=x,D=h.index+b.length}while(h=g.exec(u));D!==u.length&&(r+=u.substring(D))}else r=u;return r}}}),m=$({"../../node_modules/rfdc/index.js"(u,e){function r(u){return u instanceof a?a.from(u):new u.constructor(u.buffer.slice(),u.byteOffset,u.length)}e.exports=function(u){if((u=u||{}).circles)return function(u){var e=[],t=[];return u.proto?function u(n){if("object"!=typeof n||null===n)return n;if(n instanceof Date)return new Date(n);if(Array.isArray(n))return a(n,u);if(n instanceof Map)return new Map(a(Array.from(n),u));if(n instanceof Set)return new Set(a(Array.from(n),u));var s={};for(var i in e.push(n),t.push(s),n){var o=n[i];if("object"!=typeof o||null===o)s[i]=o;else if(o instanceof Date)s[i]=new Date(o);else if(o instanceof Map)s[i]=new Map(a(Array.from(o),u));else if(o instanceof Set)s[i]=new Set(a(Array.from(o),u));else if(ArrayBuffer.isView(o))s[i]=r(o);else{var l=e.indexOf(o);-1!==l?s[i]=t[l]:s[i]=u(o)}}return e.pop(),t.pop(),s}:function u(n){if("object"!=typeof n||null===n)return n;if(n instanceof Date)return new Date(n);if(Array.isArray(n))return a(n,u);if(n instanceof Map)return new Map(a(Array.from(n),u));if(n instanceof Set)return new Set(a(Array.from(n),u));var s={};for(var i in e.push(n),t.push(s),n)if(!1!==Object.hasOwnProperty.call(n,i)){var o=n[i];if("object"!=typeof o||null===o)s[i]=o;else if(o instanceof Date)s[i]=new Date(o);else if(o instanceof Map)s[i]=new Map(a(Array.from(o),u));else if(o instanceof Set)s[i]=new Set(a(Array.from(o),u));else if(ArrayBuffer.isView(o))s[i]=r(o);else{var l=e.indexOf(o);-1!==l?s[i]=t[l]:s[i]=u(o)}}return e.pop(),t.pop(),s};function a(u,a){for(var n=Object.keys(u),s=Array(n.length),i=0;i<n.length;i++){var o=n[i],l=u[o];if("object"!=typeof l||null===l)s[o]=l;else if(l instanceof Date)s[o]=new Date(l);else if(ArrayBuffer.isView(l))s[o]=r(l);else{var c=e.indexOf(l);-1!==c?s[o]=t[c]:s[o]=a(l)}}return s}}(u);return u.proto?function u(t){if("object"!=typeof t||null===t)return t;if(t instanceof Date)return new Date(t);if(Array.isArray(t))return e(t,u);if(t instanceof Map)return new Map(e(Array.from(t),u));if(t instanceof Set)return new Set(e(Array.from(t),u));var a={};for(var n in t){var s=t[n];"object"!=typeof s||null===s?a[n]=s:s instanceof Date?a[n]=new Date(s):s instanceof Map?a[n]=new Map(e(Array.from(s),u)):s instanceof Set?a[n]=new Set(e(Array.from(s),u)):ArrayBuffer.isView(s)?a[n]=r(s):a[n]=u(s)}return a}:function u(t){if("object"!=typeof t||null===t)return t;if(t instanceof Date)return new Date(t);if(Array.isArray(t))return e(t,u);if(t instanceof Map)return new Map(e(Array.from(t),u));if(t instanceof Set)return new Set(e(Array.from(t),u));var a={};for(var n in t)if(!1!==Object.hasOwnProperty.call(t,n)){var s=t[n];"object"!=typeof s||null===s?a[n]=s:s instanceof Date?a[n]=new Date(s):s instanceof Map?a[n]=new Map(e(Array.from(s),u)):s instanceof Set?a[n]=new Set(e(Array.from(s),u)):ArrayBuffer.isView(s)?a[n]=r(s):a[n]=u(s)}return a};function e(u,e){for(var t=Object.keys(u),a=Array(t.length),n=0;n<t.length;n++){var s=t[n],i=u[s];"object"!=typeof i||null===i?a[s]=i:i instanceof Date?a[s]=new Date(i):ArrayBuffer.isView(i)?a[s]=r(i):a[s]=e(i)}return a}}}}),h={};function D(u){if(null==u||"object"!=typeof u)return!1;let e=Object.getPrototypeOf(u);return(null===e||e===Object.prototype||null===Object.getPrototypeOf(e))&&!(Symbol.iterator in u)&&!(Symbol.toStringTag in u)}function b(u){return"string"==typeof u}function x(u){return Number.isSafeInteger(u)&&u>=0}function B(u){return null!=u}((u,e)=>{for(var r in e)s(u,r,{get:e[r],enumerable:!0})})(h,{defaults:()=>eT,stripHtml:()=>function u(e,r){let t=Date.now(),a=[],n=[],s=[],i=[],o={};o={attributes:[]};let l=null,c=null,$=null,p=!1,_={},g={tagName:"",hrefValue:"",openingTagEnds:void 0},A="",f=!1,d=null,m=!0;function h(u,r,t){if(Array.isArray(r.stripTogetherWithTheirContents)&&(r.stripTogetherWithTheirContents.includes(o.name)||r.stripTogetherWithTheirContents.includes("*"))){if(o.slashPresent&&Array.isArray(a)&&a.some(u=>u.name===o.name)){for(let n=a.length;n--;)if(a[n].name===o.name){i=i.filter(([e,r])=>(e<a[n].lastOpeningBracketAt||e>=u+1)&&(r<=a[n].lastOpeningBracketAt||r>u+1));let s=u+1;o.lastClosingBracketAt&&(s=o.lastClosingBracketAt+1),i.push([a[n].lastOpeningBracketAt,s]),e5.has(e[u])&&r.cb?r.cb({tag:o,deleteFrom:a[n].lastOpeningBracketAt,deleteTo:u+1,insert:null,rangesArr:t,proposedReturn:[a[n].lastOpeningBracketAt,u,null]}):r.cb&&r.cb({tag:o,deleteFrom:a[n].lastOpeningBracketAt,deleteTo:u,insert:"",rangesArr:t,proposedReturn:[a[n].lastOpeningBracketAt,u,""]}),a.splice(n,1);break}}else o.slashPresent||a.push(o)}else Array.isArray(r.ignoreTagsWithTheirContents)&&E(u,r,o)&&(m=!1)}function x(u,r,t,a,n,s){if(Array.isArray(O.current())&&"number"==typeof t&&0===O.current()[0][0]&&O.current()[0][1]>=t)return"";if(e.length===a&&s&&!F?.dumpLinkHrefsNearby?.enabled)return null;let i="";if(Number.isInteger(t)&&t<n&&(i+=u.slice(t,n)),Number.isInteger(a)&&a>s+1){let l=u.slice(s+1,a);a&&!eB(e,a-1)&&(l=l.trimEnd()),l.includes("\n")&&y(a,u)?i+=" ":i+=l}let c=!e5.has(u[r]),$=">"!==u[a-1]||!u[t].trim(),p=!['"',"("].includes(u[n-1]),_=![";",".",":","!"].includes(u[r]);if((c||$&&p&&_)&&($||p)&&"!"!==u[r]&&(!eq.has(o.name)||"number"==typeof t&&t<n||"number"==typeof a&&a>s+1)){let g=i.match(/\n/g);return Array.isArray(g)&&g.length?1===g.length?"\n":2===g.length?"\n\n":"\n\n\n":" "}return""}function B(u,r){if(u.dumpLinkHrefsNearby?.enabled&&g.tagName&&g.tagName===o.name&&o.lastOpeningBracketAt&&(g.openingTagEnds&&o.lastOpeningBracketAt>g.openingTagEnds||!g.openingTagEnds)&&(f=!0),f){let t=u.dumpLinkHrefsNearby?.putOnNewLine?"\n\n":"";A=`${t}${g.hrefValue}`,("number"!=typeof r||eB(e,r-1))&&(A+=t)}}function y(u,r){return r?"<"===r[u]&&"%"!==r[u+1]:"<"===e[u]&&"%"!==e[u+1]}function C(u){return">"===e[u]&&"%"!==e[u-1]}function E(u,r,t){if(r.ignoreTagsWithTheirContents.includes("*"))return!0;let a=e.indexOf(`<${t.name}`,u),s=e.indexOf(`</${t.name}`,u);return(!!t.slashPresent||-1!==s)&&(!t.slashPresent||!!n.some(u=>u.name===t.name))&&(!(s>-1)||!(a>-1)||!(a<s))&&r.ignoreTagsWithTheirContents.includes(t.name)}if("string"!=typeof e)throw TypeError(`string-strip-html/stripHtml(): [THROW_ID_01] Input must be string! Currently it's: ${(typeof e).toLowerCase()}, equal to:
${JSON.stringify(e,null,4)}`);if(r){if(D(r)){if(r.reportProgressFunc&&"function"!=typeof r.reportProgressFunc)throw Error(`string-strip-html/stripHtml(): [THROW_ID_03] The Optional Options Object's key reportProgressFunc, callback function, should be a function but it was given as type ${typeof r.reportProgressFunc}, equal to ${JSON.stringify(r.reportProgressFunc,null,4)}`);if("boolean"==typeof r.dumpLinkHrefsNearby&&null!=r.dumpLinkHrefsNearby)throw Error(`string-strip-html/stripHtml(): [THROW_ID_04] The Optional Options Object's key should be a plain object but it was given as type ${typeof r.dumpLinkHrefsNearby}, equal to ${JSON.stringify(r.dumpLinkHrefsNearby,null,4)}`)}else throw TypeError(`string-strip-html/stripHtml(): [THROW_ID_02] Optional Options Object must be a plain object! Currently it's: ${(typeof r).toLowerCase()}, equal to:
${JSON.stringify(r,null,4)}`)}function v(){f&&(g={tagName:"",hrefValue:"",openingTagEnds:void 0},f=!1)}let F={...eT,...r,dumpLinkHrefsNearby:Object.assign({},eT.dumpLinkHrefsNearby,r?.dumpLinkHrefsNearby)};var q,w="returnRangesOnly";if(D(q=F)&&b(w)&&w in q)throw TypeError("string-strip-html/stripHtml(): [THROW_ID_05] The Optional Options Object's key returnRangesOnly has been removed from the API since v.5 release.");if(F.reportProgressFunc){if("number"!=typeof F.reportProgressFuncFrom)throw Error(`string-strip-html/stripHtml(): [THROW_ID_06] The Optional Options Object's key reportProgressFuncFrom, callback function's "from" range, should be a number but it was given as type ${typeof F.reportProgressFuncFrom}, equal to ${JSON.stringify(F.reportProgressFuncFrom,null,4)}`);if("number"!=typeof F.reportProgressFuncTo)throw Error(`string-strip-html/stripHtml(): [THROW_ID_07] The Optional Options Object's key reportProgressFuncTo, callback function's "to" range, should be a number but it was given as type ${typeof F.reportProgressFuncTo}, equal to ${JSON.stringify(F.reportProgressFuncTo,null,4)}`)}F.ignoreTags=eC(F.ignoreTags,"resolvedOpts.ignoreTags"),F.onlyStripTags=eC(F.onlyStripTags,"resolvedOpts.onlyStripTags");let T=!!F.onlyStripTags.length;F.onlyStripTags.length&&F.ignoreTags.length&&(F.onlyStripTags=ed(F.onlyStripTags,...F.ignoreTags)),F.stripTogetherWithTheirContents?"string"==typeof F.stripTogetherWithTheirContents&&F.stripTogetherWithTheirContents.length&&(F.stripTogetherWithTheirContents=[F.stripTogetherWithTheirContents]):F.stripTogetherWithTheirContents=[];let k={};if(F.stripTogetherWithTheirContents&&Array.isArray(F.stripTogetherWithTheirContents)&&F.stripTogetherWithTheirContents.length&&!F.stripTogetherWithTheirContents.every((u,e)=>"string"==typeof u||(k.el=u,k.i=e,!1)))throw TypeError(`string-strip-html/stripHtml(): [THROW_ID_08] Optional Options Object's key stripTogetherWithTheirContents was set to contain not just string elements! For example, element at index ${k.i} has a value ${k.el} which is not string but ${(typeof k.el).toLowerCase()}.`);F.cb||(F.cb=({rangesArr:u,proposedReturn:e})=>{e&&u.push(...e)});let O=new ex({limitToBeAddedWhitespace:!0,limitLinebreaksCount:2});if(!F.skipHtmlDecoding)for(;e!==(0,em.decode)(e,{scope:"strict"});)e=(0,em.decode)(e,{scope:"strict"});let S=!1,L=!1,R=0,N=0,I=e.length,H=Math.floor(I/2);for(let P=0;P<I;P++){if(F.reportProgressFunc&&(I>1e3&&I<2e3?P===H&&F.reportProgressFunc(Math.floor((F.reportProgressFuncTo-F.reportProgressFuncFrom)/2)):I>=2e3&&(R=F.reportProgressFuncFrom+Math.floor(P/I*(F.reportProgressFuncTo-F.reportProgressFuncFrom)))!==N&&(N=R,F.reportProgressFunc(R))),Object.keys(o).length>1&&o.lastClosingBracketAt&&o.lastClosingBracketAt<P&&" "!==e[P]&&null===d&&(d=P),!S&&"%"===e[P]&&"{"===e[P-1]&&e.includes("%}",P+1)){$=null;let U=e.indexOf("%}",P)-1;if(U>P){P=U;continue}}if(!S&&C(P)&&(!o||Object.keys(o).length<2)&&P>1){for(let V=P;V--;)if(void 0===e[V-1]||C(V)){let j=void 0===e[V-1]?V:V+1,W=e.slice(j,P+1)||"";if((W.includes("/>")||W.includes("/ >")||W.includes('="')||W.includes("='"))&&e!==`<${ef(W.trim(),"/>")}>`&&[...eF].some(u=>ef(W.trim().split(/\s+/).filter(u=>u.trim()).filter((u,e)=>0===e),"/>").toLowerCase()===u)&&""===u(`<${W.trim()}>`,F).result){s.length&&s[s.length-1][0]===o.lastOpeningBracketAt||s.push([j,P+1]),i.length&&i[i.length-1][0]===o.lastOpeningBracketAt||i.push([j,P+1]);let z=x(e,P,j,P+1,j,P+1),G=P+1;if(e[G]&&!e[G].trim()){for(let M=G;M<I;M++)if(e[M].trim()){G=M;break}}F.cb({tag:o,deleteFrom:j,deleteTo:G,insert:z,rangesArr:O,proposedReturn:[j,G,z]})}break}}if(!L&&"/"===e[P]&&!o.quotes?.value&&Number.isInteger(o.lastOpeningBracketAt)&&!Number.isInteger(o.lastClosingBracketAt)&&(o.slashPresent=P),'"'===e[P]||"'"===e[P]){if(!L&&o.nameStarts&&o?.quotes?.value===e[P]){_.valueEnds=P,_.value=e.slice(_.valueStarts,P),o.attributes.push(_),_={},delete o.quotes;let Y;F.dumpLinkHrefsNearby?.enabled&&!a.length&&o.attributes.some(u=>{if("string"==typeof u.name&&"href"===u.name.toLowerCase())return Y=`${F.dumpLinkHrefsNearby?.wrapHeads||""}${u.value}${F.dumpLinkHrefsNearby?.wrapTails||""}`,!0})&&(g={tagName:o.name,hrefValue:Y,openingTagEnds:void 0})}else!L&&!o.quotes&&o.nameStarts&&(o.quotes={},o.quotes.value=e[P],o.quotes.start=P,o.quotes.next=e.indexOf(e[P],P+1),_.nameStarts&&_.nameEnds&&_.nameEnds<P&&_.nameStarts<P&&!_.valueStarts&&(_.name=e.slice(_.nameStarts,_.nameEnds)))}if(void 0!==o.nameStarts&&void 0===o.nameEnds&&(!e[P].trim()||!ey(e[P]))){if(o.nameEnds=P,o.name=e.slice(o.nameStarts,o.nameEnds+(C(P)||"/"===e[P]||void 0!==e[P+1]?0:1)),"!"!==e[o.nameStarts-1]&&!o.name.replace(/-/g,"").length||/^\d+$/.test(o.name[0])){o={};continue}if("string"==typeof o.name&&"doctype"===o.name.toLowerCase()&&(L=!0),y(P)){B(F);let Z=x(e,P,o.leftOuterWhitespace,P,o.lastOpeningBracketAt,P);(F.stripTogetherWithTheirContents.includes(o.name)||F.stripTogetherWithTheirContents.includes("*"))&&(i=i.filter(([u,e])=>!(u===o.leftOuterWhitespace&&e===P))),F.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:P,insert:`${Z}${A}${Z}`,rangesArr:O,proposedReturn:[o.leftOuterWhitespace,P,`${Z}${A}${Z}`]}),v(),h(P,F,O)}}if(o.quotes?.start&&o.quotes.start<P&&!o.quotes.end&&_.nameEnds&&_.equalsAt&&!_.valueStarts&&(_.valueStarts=P),o.quotes||!_.nameEnds||"="!==e[P]||_.valueStarts||_.equalsAt||(_.equalsAt=P),!o.quotes&&_.nameStarts&&_.nameEnds&&!_.valueStarts&&e[P].trim()&&"="!==e[P]&&(o.attributes.push(_),_={}),!o.quotes&&_.nameStarts&&!_.nameEnds&&(L&&"'\"".includes(e[_.nameStarts])?_.nameStarts<P&&e[P]===e[_.nameStarts]&&(_.nameEnds=P+1,_.name=e.slice(_.nameStarts,_.nameEnds)):e[P].trim()?"="===e[P]?_.equalsAt||(_.nameEnds=P,_.equalsAt=P,_.name=e.slice(_.nameStarts,_.nameEnds)):"/"===e[P]||C(P)?(_.nameEnds=P,_.name=e.slice(_.nameStarts,_.nameEnds),o.attributes.push(_),_={}):y(P)&&(_.nameEnds=P,_.name=e.slice(_.nameStarts,_.nameEnds),o.attributes.push(_),_={}):(_.nameEnds=P,_.name=e.slice(_.nameStarts,_.nameEnds))),!(!o.quotes&&o.nameEnds<P&&!e[P-1].trim()&&e[P].trim())||"<>/!".includes(e[P])||_.nameStarts||o.lastClosingBracketAt||(_.nameStarts=P),null!==o.lastOpeningBracketAt&&o.lastOpeningBracketAt<P&&"/"===e[P]&&o.onlyPlausible&&(o.onlyPlausible=!1),null!==o.lastOpeningBracketAt&&o.lastOpeningBracketAt<P&&"/"!==e[P]&&(void 0===o.onlyPlausible&&((!e[P].trim()||y(P))&&!o.slashPresent?o.onlyPlausible=!0:o.onlyPlausible=!1),!e[P].trim()||void 0!==o.nameStarts||y(P)||"/"===e[P]||C(P)||"!"===e[P]||(o.nameStarts=P,o.nameContainsLetters=!1)),o.nameStarts&&!o.quotes&&"string"==typeof e[P]&&e[P].toLowerCase()!==e[P].toUpperCase()&&(o.nameContainsLetters=!0),C(P)&&(e2(o,e,P)||o.quotes.value&&"number"==typeof o.lastOpeningBracketAt&&ev(o.quotes.value,e.slice(o.lastOpeningBracketAt,P))%2==1&&!e.slice(o.lastOpeningBracketAt+1,P).includes("<")&&!e.slice(o.lastOpeningBracketAt+1,P).includes(">"))&&void 0!==o.lastOpeningBracketAt&&(o.lastClosingBracketAt=P,d=null,Object.keys(_).length&&(o.attributes.push(_),_={}),F.dumpLinkHrefsNearby?.enabled&&g.tagName&&!g.openingTagEnds&&(g.openingTagEnds=P)),(!L||">"===e[P])&&void 0!==o.lastOpeningBracketAt){if(void 0===o.lastClosingBracketAt){if(o.lastOpeningBracketAt<P&&!y(P)&&(void 0===e[P+1]||y(P+1)&&!o?.quotes?.value)&&o.nameContainsLetters&&"number"==typeof o.nameStarts){if(o.name=e.slice(o.nameStarts,o.nameEnds||P+1).toLowerCase(),s.length&&s[s.length-1][0]===o.lastOpeningBracketAt||s.push([o.lastOpeningBracketAt,P+1]),F.ignoreTags.includes(o.name)||E(P,F,o)||!eF.has(o.name)&&(o.onlyPlausible||F.stripRecognisedHTMLOnly)){o={},_={};continue}if((eF.has(o.name)||e4.has(o.name))&&(!1===o.onlyPlausible||!0===o.onlyPlausible&&o.attributes.length)||void 0===e[P+1]){B(F);let J=x(e,P,o.leftOuterWhitespace,P+1,o.lastOpeningBracketAt,o.lastClosingBracketAt);S&&"script"===o.name&&o.slashPresent&&(S=!1);let K;K=null===J||null===A?null:`${J}${A}${J}`,F.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:P+1,insert:K,rangesArr:O,proposedReturn:[o.leftOuterWhitespace,P+1,K]}),v(),h(P,F,O)}if(!i.length||i[i.length-1][0]!==o.lastOpeningBracketAt&&i[i.length-1][1]!==P+1){if(F.stripTogetherWithTheirContents.includes(o.name)||F.stripTogetherWithTheirContents.includes("*")){let X;for(let Q=a.length;Q--;)a[Q].name===o.name&&(X=a[Q]);X?(i=i.filter(([u])=>u!==X.lastOpeningBracketAt)).push([X.lastOpeningBracketAt,P+1]):i.push([o.lastOpeningBracketAt,P+1])}else i.push([o.lastOpeningBracketAt,P+1])}}}else if(P>o.lastClosingBracketAt&&e[P].trim()||void 0===e[P+1]||F.ignoreIndentations&&`\r
`.includes(e[P])){let uu=o.lastClosingBracketAt===P?P+1:P;F.trimOnlySpaces&&uu===I-1&&null!==d&&d<P&&(uu=d),s.length&&s[s.length-1][0]===o.lastOpeningBracketAt||s.push([o.lastOpeningBracketAt,o.lastClosingBracketAt+1]);let ue=F.ignoreTags.includes(o.name),ur=E(P,F,o);if(!m||F.stripRecognisedHTMLOnly&&"string"==typeof o.name&&!eF.has(o.name.toLowerCase())&&!e4.has(o.name.toLowerCase())||!T&&(ue||ur)||T&&!F.onlyStripTags.includes(o.name)||F.ignoreTagsWithTheirContents.includes(o.name)){if(ur){if(o.slashPresent){for(let u0=n.length;u0--;)if(n[u0].name===o.name){n.splice(u0,1);break}n.length||(m=!0)}else m&&(m=!1),n.push(o)}F.cb({tag:o,deleteFrom:null,deleteTo:null,insert:null,rangesArr:O,proposedReturn:null}),o={},_={}}else if(!o.onlyPlausible||0===o.attributes.length&&o.name&&(eF.has(o.name.toLowerCase())||e4.has(o.name.toLowerCase()))||o.attributes?.some(u=>u.equalsAt)){i.length&&i[i.length-1][0]===o.lastOpeningBracketAt||i.push([o.lastOpeningBracketAt,o.lastClosingBracketAt+1]);let ut=x(e,P,o.leftOuterWhitespace,uu,o.lastOpeningBracketAt,o.lastClosingBracketAt);A="",f=!1,B(F,uu);let ua;"string"==typeof A&&A.length?(ua=`${ut}${A}${"\n\n"===ut?"\n":ut}`,uu!==o.lastClosingBracketAt+1||e[uu]&&e6.has(e[uu])||(ua+=" "),o.leftOuterWhitespace===o.lastOpeningBracketAt&&O.last()&&O.last()[1]<o.lastOpeningBracketAt&&(!F?.dumpLinkHrefsNearby?.putOnNewLine||!e6.has(e[uu]))&&(ua=" "+ua)):ua=ut,null===ua||0!==o.leftOuterWhitespace&&eB(e,uu-1)||F.dumpLinkHrefsNearby?.enabled&&"a"===o.name||(ua=void 0);let un=0;if(f&&e6.has(e[uu])){F.dumpLinkHrefsNearby?.putOnNewLine&&(ua=`${e[uu]}${ua||""}`);let us=eB(e,uu);us&&ua?.endsWith("\n")?un+=us-P:(!us||us>P)&&un++}F.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:uu+un,insert:ua,rangesArr:O,proposedReturn:[o.leftOuterWhitespace,uu+un,ua]}),v(),h(P,F,O)}else o={};C(P)||(o={})}L&&(L=!1)}if((!S||"<"===e[P]&&eB(e,eB(e,P))&&"/"===e[eB(e,P)]&&e.startsWith("script",eB(e,eB(e,P))))&&y(P)&&!y(P-1)&&!"'\"".includes(e[P+1])&&(!"'\"".includes(e[P+2])||/\w/.test(e[P+1]))&&!("c"===e[P+1]&&":"===e[P+2])&&!("f"===e[P+1]&&"m"===e[P+2]&&"t"===e[P+3]&&":"===e[P+4])&&!("s"===e[P+1]&&"q"===e[P+2]&&"l"===e[P+3]&&":"===e[P+4])&&!("x"===e[P+1]&&":"===e[P+2])&&!("f"===e[P+1]&&"n"===e[P+2]&&":"===e[P+3])&&e2(o,e,P)){if(C(eB(e,P)))continue;if(o.nameEnds&&o.nameEnds<P&&!o.lastClosingBracketAt&&(!0===o.onlyPlausible&&o.attributes&&o.attributes.length||!1===o.onlyPlausible)){let ui=x(e,P,o.leftOuterWhitespace,P,o.lastOpeningBracketAt,P);F.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:P,insert:ui,rangesArr:O,proposedReturn:[o.leftOuterWhitespace,P,ui]}),h(P,F,O),o={},_={}}if(void 0!==o.lastOpeningBracketAt&&o.onlyPlausible&&o.name&&!o.quotes&&(o.lastOpeningBracketAt=void 0,o.name=void 0,o.onlyPlausible=!1),(void 0===o.lastOpeningBracketAt||!o.onlyPlausible)&&!o.quotes&&(o.lastOpeningBracketAt=P,o.slashPresent=!1,o.attributes=[],null===l?o.leftOuterWhitespace=P:F.trimOnlySpaces&&0===l?o.leftOuterWhitespace=c||P:o.leftOuterWhitespace=l,"!--"==`${e[P+1]}${e[P+2]}${e[P+3]}`||"![CDATA["==`${e[P+1]}${e[P+2]}${e[P+3]}${e[P+4]}${e[P+5]}${e[P+6]}${e[P+7]}${e[P+8]}`)){let uo=!0;"-"===e[P+2]&&(uo=!1);let ul;for(let uc=P;uc<I;uc++)if((ul||!uo||"]]>"!=`${e[uc-2]}${e[uc-1]}${e[uc]}`)&&(uo||"-->"!=`${e[uc-2]}${e[uc-1]}${e[uc]}`)||(ul=uc),ul&&(ul<uc&&e[uc].trim()||void 0===e[uc+1])){let u$=uc;(void 0!==e[uc+1]||e[uc].trim())&&">"!==e[uc]||(u$+=1),s.length&&s[s.length-1][0]===o.lastOpeningBracketAt||s.push([o.lastOpeningBracketAt,ul+1]),i.length&&i[i.length-1][0]===o.lastOpeningBracketAt||i.push([o.lastOpeningBracketAt,ul+1]);let up=x(e,uc,o.leftOuterWhitespace,u$,o.lastOpeningBracketAt,ul);F.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:u$,insert:up,rangesArr:O,proposedReturn:[o.leftOuterWhitespace,u$,up]}),P=uc-1,">"===e[uc]&&(P=uc),o={},_={};break}}}e[P].trim()&&847!==e[P].charCodeAt(0)?(null!==l&&(!o.quotes&&_.equalsAt>l-1&&_.nameEnds&&_.equalsAt>_.nameEnds&&'"'!==e[P]&&"'"!==e[P]&&(D(_)&&o.attributes.push(_),_={},o.equalsSpottedAt=void 0),l=null),!p&&(p=!0,m&&!S&&"number"==typeof $&&P&&$<P-1&&(e.slice($+1,P).trim()?$=null:F.ignoreIndentations||O.push([$+1,P])))):(null===l&&(l=P,void 0!==o.lastOpeningBracketAt&&o.lastOpeningBracketAt<P&&o.nameStarts&&o.nameStarts<o.lastOpeningBracketAt&&P===o.lastOpeningBracketAt+1&&!a.some(u=>u.name===o.name)&&(o.onlyPlausible=!0,o.name=void 0,o.nameStarts=void 0)),("\n"===e[P]||"\r"===e[P])&&($=P,p&&(p=!1)))," "===e[P]?null===c&&(c=P):null!==c&&(c=null),"script"===o.name&&(S=!o.slashPresent)}if(e&&!F.ignoreIndentations&&(F.trimOnlySpaces&&" "===e[0]||!F.trimOnlySpaces&&!e[0].trim()))for(let u_=0;u_<I;u_++){if(F.trimOnlySpaces&&" "!==e[u_]||!F.trimOnlySpaces&&e[u_].trim()){O.push([0,u_]);break}e[u_+1]||O.push([0,u_+1])}if(e&&(F.trimOnlySpaces&&" "===e[~-e.length]||!F.trimOnlySpaces&&!e[~-e.length].trim())){for(let ug=e.length;ug--;)if(F.trimOnlySpaces&&" "!==e[ug]||!F.trimOnlySpaces&&e[ug].trim()){O.push([ug+1,I]);break}}let uA=O.current();if(!r?.cb&&uA&&(uA[0]&&!uA[0][0]&&(uA[0][1],O.ranges[0]=[O.ranges[0][0],O.ranges[0][1]]),uA[uA.length-1]&&uA[uA.length-1][1]===e.length&&(uA[uA.length-1][0],O.ranges))){let uf=O.ranges[O.ranges.length-1][0];e[uf-1]&&(F.trimOnlySpaces&&" "===e[uf-1]||!F.trimOnlySpaces&&!e[uf-1].trim())&&(uf-=1);let ud=O.ranges[O.ranges.length-1][2];O.ranges[O.ranges.length-1]=[uf,O.ranges[O.ranges.length-1][1]],ud?.trim()&&O.ranges[O.ranges.length-1].push(ud.trimEnd())}return{log:{timeTakenInMilliseconds:Date.now()-t},result:function(u,e,r){let t=0,a=0;if(0===arguments.length)throw Error("ranges-apply: [THROW_ID_01] inputs missing!");if("string"!=typeof u)throw TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof u}, equal to: ${JSON.stringify(u,null,4)}`);if(e&&!Array.isArray(e))throw TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(r&&"function"!=typeof r)throw TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);if(!e?.filter(u=>u).length)return u;let n,s=(n=Array.isArray(e)&&Number.isInteger(e[0])&&Number.isInteger(e[1])?[Array.from(e)]:Array.from(e)).length,i=0;n.filter(u=>u).forEach((u,e)=>{if(r&&(t=Math.floor(i/s*10))!==a&&(a=t,r(t)),!Array.isArray(u))throw TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${e}th element not an array: ${JSON.stringify(u,null,4)}, which is ${typeof u}`);if(!Number.isInteger(u[0])){if(!Number.isInteger(+u[0])||0>+u[0])throw TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${e}th element, array ${JSON.stringify(u,null,0)}. Its first element is not an integer, string index, but ${typeof u[0]}, equal to: ${JSON.stringify(u[0],null,4)}.`);n[e][0]=+n[e][0]}if(!Number.isInteger(u[1])){if(!Number.isInteger(+u[1])||0>+u[1])throw TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${e}th element, array ${JSON.stringify(u,null,0)}. Its second element is not an integer, string index, but ${typeof u[1]}, equal to: ${JSON.stringify(u[1],null,4)}.`);n[e][1]=+n[e][1]}i+=1});let o=function(u,e){function r(u){return!!u&&"object"==typeof u&&!Array.isArray(u)}if(!Array.isArray(u)||!u.length)return null;let t;if(e){if(r(e)){if((t={...eD,...e}).progressFn&&r(t.progressFn)&&!Object.keys(t.progressFn).length)t.progressFn=null;else if(t.progressFn&&"function"!=typeof t.progressFn)throw Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof t.progressFn}", equal to ${JSON.stringify(t.progressFn,null,4)}`);if(![1,2,"1","2"].includes(t.mergeType))throw Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof t.mergeType}", equal to ${JSON.stringify(t.mergeType,null,4)}`);if("boolean"!=typeof t.joinRangesThatTouchEdges)throw Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof t.joinRangesThatTouchEdges}", equal to ${JSON.stringify(t.joinRangesThatTouchEdges,null,4)}`)}else throw Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(e,null,4)} (type ${typeof e})`)}else t={...eD};let a=u.filter(u=>Array.isArray(u)).map(u=>[...u]).filter(u=>void 0!==u[2]||u[0]!==u[1]),n,s,i,o=(n=t.progressFn?e1(a,{progressFn(u){(i=Math.floor(u/5))!==s&&(s=i,t.progressFn(i))}}):e1(a)).length-1;for(let l=o;l>0;l--)t.progressFn&&(i=Math.floor((1-l/o)*78)+21)!==s&&i>s&&(s=i,t.progressFn(i)),(n[l][0]<=n[l-1][0]||!t.joinRangesThatTouchEdges&&n[l][0]<n[l-1][1]||t.joinRangesThatTouchEdges&&n[l][0]<=n[l-1][1])&&(n[l-1][0]=Math.min(n[l][0],n[l-1][0]),n[l-1][1]=Math.max(n[l][1],n[l-1][1]),void 0!==n[l][2]&&(n[l-1][0]>=n[l][0]||n[l-1][1]<=n[l][1])&&null!==n[l-1][2]&&(null===n[l][2]&&null!==n[l-1][2]?n[l-1][2]=null:null!=n[l-1][2]?2==+t.mergeType&&n[l-1][0]===n[l][0]?n[l-1][2]=n[l][2]:n[l-1][2]+=n[l][2]:n[l-1][2]=n[l][2]),n.splice(l,1),l=n.length);return n.length?n:null}(n,{progressFn(u){r&&(t=10+Math.floor(u/10))!==a&&(a=t,r(t))}});!function(u,e){if(!u)throw Error(e3)}(o);let l=o.length;if(l>0){let c=u.slice(o[l-1][1]);u=o.reduce((e,n,s,i)=>{r&&(t=20+Math.floor(s/l*80))!==a&&(a=t,r(t));let o;return`${e}${u.slice(0===s?0:i[s-1][1],i[s][0])}${i[s][2]||""}`},""),u+=c}return u}(e,O.current()),ranges:O.current(),allTagLocations:s,filteredTagLocations:i}},version:()=>ew}),u.exports=(t=h,p(s({},"__esModule",{value:!0}),t));var y="object"==typeof r.g&&r.g&&r.g.Object===Object&&r.g,C="object"==typeof self&&self&&self.Object===Object&&self,E=y||C||Function("return this")(),v=E.Symbol,F=Object.prototype,q=F.hasOwnProperty,w=F.toString,T=v?v.toStringTag:void 0,k=function(u){var e=q.call(u,T),r=u[T];try{u[T]=void 0;var t=!0}catch(a){}var n=w.call(u);return t&&(e?u[T]=r:delete u[T]),n},O=Object.prototype.toString,S=v?v.toStringTag:void 0,L=function(u){var e;return null==u?void 0===u?"[object Undefined]":"[object Null]":S&&S in Object(u)?k(u):(e=u,O.call(e))},R=function(u){return null!=u&&"object"==typeof u},N=function(u,e){for(var r=-1,t=null==u?0:u.length,a=Array(t);++r<t;)a[r]=e(u[r],r,u);return a},I=Array.isArray,H=1/0,P=v?v.prototype:void 0,U=P?P.toString:void 0;function V(u){if("string"==typeof u)return u;if(I(u))return N(u,V)+"";if("symbol"==typeof(e=u)||R(e)&&"[object Symbol]"==L(e))return U?U.call(u):"";var e,r=u+"";return"0"==r&&1/u==-H?"-0":r}var j=V,W=/\s/,z=function(u){for(var e=u.length;e--&&W.test(u.charAt(e)););return e},G=/^\s+/,M=function(u){var e=typeof u;return null!=u&&("object"==e||"function"==e)};function Y(u){return u}var Z,J,K,X,Q=Y,uu=function(u){if(!M(u))return!1;var e=L(u);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e},ue=E["__core-js_shared__"],ur=(Z=/[^.]+$/.exec(ue&&ue.keys&&ue.keys.IE_PROTO||""))?"Symbol(src)_1."+Z:"",u0=Function.prototype.toString,ut=function(u){if(null!=u){try{return u0.call(u)}catch(e){}try{return u+""}catch(r){}}return""},ua=/^\[object .+?Constructor\]$/,un=Function.prototype,us=Object.prototype,ui=un.toString,uo=us.hasOwnProperty,ul=RegExp("^"+ui.call(uo).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),uc=function(u){var e;return!!M(u)&&(e=u,!ur||!(ur in e))&&(uu(u)?ul:ua).test(ut(u))},u$=function(u,e){var r,t,a=(r=u,t=e,null==r?void 0:r[t]);return uc(a)?a:void 0},up=function(u,e,r){switch(r.length){case 0:return u.call(e);case 1:return u.call(e,r[0]);case 2:return u.call(e,r[0],r[1]);case 3:return u.call(e,r[0],r[1],r[2])}return u.apply(e,r)},u_=Date.now,ug=function(){try{var u=u$(Object,"defineProperty");return u({},"",{}),u}catch(e){}}(),uA=(J=ug?function(u,e){var r;return ug(u,"toString",{configurable:!0,enumerable:!1,value:(r=e,function(){return r}),writable:!0})}:Q,K=0,X=0,function(){var u=u_(),e=16-(u-X);if(X=u,e>0){if(++K>=800)return arguments[0]}else K=0;return J.apply(void 0,arguments)}),uf=function(u,e,r,t){for(var a=u.length,n=r+(t?1:-1);t?n--:++n<a;)if(e(u[n],n,u))return n;return -1};function ud(u){return u!=u}var um=ud,uh=function(u,e,r){for(var t=r-1,a=u.length;++t<a;)if(u[t]===e)return t;return -1},u1=function(u,e,r){return e==e?uh(u,e,r):uf(u,um,r)},uD=function(u,e){return!!(null==u?0:u.length)&&u1(u,e,0)>-1},u3=Math.max,u7=function(u){var e;return null!=u&&"number"==typeof(e=u.length)&&e>-1&&e%1==0&&e<=9007199254740991&&!uu(u)},ub=u$(Object,"create"),ux=function(){this.__data__=ub?ub(null):{},this.size=0},uB=function(u){var e=this.has(u)&&delete this.__data__[u];return this.size-=e?1:0,e},uy=Object.prototype.hasOwnProperty,uC=function(u){var e=this.__data__;if(ub){var r=e[u];return"__lodash_hash_undefined__"===r?void 0:r}return uy.call(e,u)?e[u]:void 0},uE=Object.prototype.hasOwnProperty,u2=function(u){var e=this.__data__;return ub?void 0!==e[u]:uE.call(e,u)},uv=function(u,e){var r=this.__data__;return this.size+=this.has(u)?0:1,r[u]=ub&&void 0===e?"__lodash_hash_undefined__":e,this};function uF(u){var e=-1,r=null==u?0:u.length;for(this.clear();++e<r;){var t=u[e];this.set(t[0],t[1])}}uF.prototype.clear=ux,uF.prototype.delete=uB,uF.prototype.get=uC,uF.prototype.has=u2,uF.prototype.set=uv;var u4=uF,u6=function(){this.__data__=[],this.size=0},u5=function(u,e){for(var r,t,a=u.length;a--;)if(r=u[a][0],r===(t=e)||r!=r&&t!=t)return a;return -1},uq=Array.prototype.splice,uw=function(u){var e=this.__data__,r=u5(e,u);return!(r<0)&&(r==e.length-1?e.pop():uq.call(e,r,1),--this.size,!0)},uT=function(u){var e=this.__data__,r=u5(e,u);return r<0?void 0:e[r][1]},uk=function(u){return u5(this.__data__,u)>-1},uO=function(u,e){var r=this.__data__,t=u5(r,u);return t<0?(++this.size,r.push([u,e])):r[t][1]=e,this};function uS(u){var e=-1,r=null==u?0:u.length;for(this.clear();++e<r;){var t=u[e];this.set(t[0],t[1])}}uS.prototype.clear=u6,uS.prototype.delete=uw,uS.prototype.get=uT,uS.prototype.has=uk,uS.prototype.set=uO;var uL=uS,uR=u$(E,"Map"),u8=function(){this.size=0,this.__data__={hash:new u4,map:new(uR||uL),string:new u4}},uN=function(u){var e=typeof u;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==u:null===u},uI=function(u,e){var r=u.__data__;return uN(e)?r["string"==typeof e?"string":"hash"]:r.map},uH=function(u){var e=uI(this,u).delete(u);return this.size-=e?1:0,e},uP=function(u){return uI(this,u).get(u)},u9=function(u){return uI(this,u).has(u)},uU=function(u,e){var r=uI(this,u),t=r.size;return r.set(u,e),this.size+=r.size==t?0:1,this};function uV(u){var e=-1,r=null==u?0:u.length;for(this.clear();++e<r;){var t=u[e];this.set(t[0],t[1])}}uV.prototype.clear=u8,uV.prototype.delete=uH,uV.prototype.get=uP,uV.prototype.has=u9,uV.prototype.set=uU;var uj=uV,uW=function(u,e,r){var t=-1,a=u.length;e<0&&(e=-e>a?0:a+e),(r=r>a?a:r)<0&&(r+=a),a=e>r?0:r-e>>>0,e>>>=0;for(var n=Array(a);++t<a;)n[t]=u[t+e];return n},uz=function(u,e,r){var t=u.length;return r=void 0===r?t:r,!e&&r>=t?u:uW(u,e,r)},uG=RegExp("[\\u200d\ud800-\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]"),uM="\ud800-\udfff",uY="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",uZ="\ud83c[\udffb-\udfff]",uJ="[^"+uM+"]",uK="(?:\ud83c[\udde6-\uddff]){2}",uX="[\ud800-\udbff][\udc00-\udfff]",uQ="(?:"+uY+"|"+uZ+")?",eu="[\\ufe0e\\ufe0f]?",ee="(?:\\u200d(?:"+[uJ,uK,uX].join("|")+")"+eu+uQ+")*",er=RegExp(uZ+"(?="+uZ+")|"+("(?:"+[uJ+uY+"?",uY,uK,uX,"["+uM+"]"].join("|"))+")"+(eu+uQ+ee),"g"),e0=function(u){var e,r,t;return(e=u,uG.test(e))?(r=u).match(er)||[]:(t=u).split("")},et=function(u){return this.__data__.set(u,"__lodash_hash_undefined__"),this},ea=function(u){return this.__data__.has(u)};function en(u){var e=-1,r=null==u?0:u.length;for(this.__data__=new uj;++e<r;)this.add(u[e])}en.prototype.add=en.prototype.push=et,en.prototype.has=ea;var es,ei,eo,el,ec=en,e$=function(u,e){return u.has(e)},ep=function(u,e,r){for(var t=-1,a=null==u?0:u.length;++t<a;)if(r(e,u[t]))return!0;return!1},e_=function(u,e,r,t){var a,n=-1,s=uD,i=!0,o=u.length,l=[],c=e.length;if(!o)return l;r&&(e=N(e,(a=r,function(u){return a(u)}))),t?(s=ep,i=!1):e.length>=200&&(s=e$,i=!1,e=new ec(e));outer:for(;++n<o;){var $=u[n],p=null==r?$:r($);if($=t||0!==$?$:0,i&&p==p){for(var _=c;_--;)if(e[_]===p)continue outer;l.push($)}else s(e,p,t)||l.push($)}return l},eg=function(u,e){for(var r=u.length;r--&&u1(e,u[r],0)>-1;);return r},eA=function(u,e){for(var r=-1,t=u.length;++r<t&&u1(e,u[r],0)>-1;);return r},ef=function(u,e,r){if((u=null==(t=u)?"":j(t))&&(r||void 0===e))return(a=u)?a.slice(0,z(a)+1).replace(G,""):a;if(!u||!(e=j(e)))return u;var t,a,n=e0(u),s=e0(e),i=eA(n,s),o=eg(n,s)+1;return uz(n,i,o).join("")},ed=uA((ei=es=function(u,e){var r;return R(r=u)&&u7(r)?e_(u,e):[]},eo=void 0,el=Q,eo=u3(void 0===eo?ei.length-1:eo,0),function(){for(var u=arguments,e=-1,r=u3(u.length-eo,0),t=Array(r);++e<r;)t[e]=u[eo+e];e=-1;for(var a=Array(eo+1);++e<eo;)a[e]=u[e];return a[eo]=el(t),up(ei,this,a)}),es+""),em=_(d(),1),eh={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function e1(u,e){if(!Array.isArray(u)||!u.length)return u;let r={...eh,...e},t,a;if(r.strictlyTwoElementsInRangeArrays&&!u.every((u,e)=>!!Array.isArray(u)&&2===u.length||(t=e,a=u.length,!1)))throw TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${t}th range (${JSON.stringify(u[t],null,4)}) has not two but ${a} elements!`);if(!u.every((u,e)=>!!(Array.isArray(u)&&Number.isInteger(u[0])&&!(u[0]<0)&&Number.isInteger(u[1]))&&!(u[1]<0)||(t=e,!1)))throw TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${t}th range (${JSON.stringify(u[t],null,4)}) does not consist of only natural numbers!`);let n=u.length**2,s=0;return Array.from(u).sort((u,e)=>(r.progressFn&&(s+=1,r.progressFn(Math.floor(100*s/n))),u[0]===e[0]?u[1]<e[1]?-1:u[1]>e[1]?1:0:u[0]<e[0]?-1:1))}var eD={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0},e3="Invariant failed";function e7(u,e=1){function r(u){return Array.from(u).reverse().join("")}function t(u,e,r){let t=r?`
`:"\r",a=r?"\r":`
`;if(!u)return u;let n=0,s="";for(let i=0,o=u.length;i<o;i++)(u[i]===t||u[i]===a&&u[i-1]!==t)&&n++,`\r
`.includes(u[i])||"\xa0"===u[i]?"\xa0"===u[i]?s+=u[i]:u[i]===t?n<=e&&(s+=u[i],u[i+1]===a&&(s+=u[i+1],i++)):u[i]===a&&u?.[i-1]!==t&&n<=e&&(s+=u[i]):u[i+1]||n||(s+=" ");return s}if("string"==typeof u&&u.length){let a=1;"number"==typeof+e&&Number.isInteger(+e)&&+e>=0&&(a=+e);let n="",s="";if(u.trim()){if(!u[0].trim()){for(let i=0,o=u.length;i<o;i++)if(u[i].trim()){n=u.slice(0,i);break}}}else n=u;if(u.trim()&&(""===u.slice(-1).trim()||"\xa0"===u.slice(-1))){for(let l=u.length;l--;)if(u[l].trim()){s=u.slice(l+1);break}}return`${t(n,a,!1)}${u.trim()}${r(t(r(s),a,!0))}`}return u}var eb={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0},ex=class{constructor(u){let e={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1,...u};if(e.mergeType&&1!==e.mergeType&&2!==e.mergeType){if(b(e.mergeType)&&"1"===e.mergeType.trim())e.mergeType=1;else if(b(e.mergeType)&&"2"===e.mergeType.trim())e.mergeType=2;else throw Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof e.mergeType}", equal to ${JSON.stringify(e.mergeType,null,4)}`)}this.opts=e,this.ranges=[]}ranges;opts;add(u,e,r){if(null==u&&null==e)return;if(B(u)&&!B(e)){if(Array.isArray(u)){if(u.length){if(u.some(u=>Array.isArray(u))){u.forEach(u=>{Array.isArray(u)&&this.add(...u)});return}u.length&&x(+u[0])&&x(+u[1])&&this.add(...u)}return}throw TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(u,null,0)}) but second-one, "to" is not (${JSON.stringify(e,null,0)})`)}if(!B(u)&&B(e))throw TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(e,null,0)}) but first-one, "from" is not (${JSON.stringify(u,null,0)})`);let t=+u,a=+e;if(x(r)&&(r=String(r)),x(t)&&x(a)){if(B(r)&&!b(r)&&!x(r))throw TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof r}, equal to:
${JSON.stringify(r,null,4)}`);if(B(this.ranges)&&Array.isArray(this.last())&&t===this.last()[1]){if(this.last()[1]=a,this.last()[2],null!==this.last()[2]&&B(r)){let n=this.last()[2]&&this.last()[2].length&&(!this.opts?.mergeType||1===this.opts.mergeType)?`${this.last()[2]}${r}`:r;this.opts.limitToBeAddedWhitespace&&(n=e7(n,this.opts.limitLinebreaksCount)),b(n)&&!n.length||(this.last()[2]=n)}}else{this.ranges||(this.ranges=[]);let s=void 0===r||b(r)&&!r.length?[t,a]:[t,a,r&&this.opts.limitToBeAddedWhitespace?e7(r,this.opts.limitLinebreaksCount):r];this.ranges.push(s)}}else throw x(t)&&t>=0?TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof a}" equal to: ${JSON.stringify(a,null,4)}`):TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof t}" equal to: ${JSON.stringify(t,null,4)}`)}push(u,e,r){this.add(u,e,r)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=function(u,e){function r(u){return!!u&&"object"==typeof u&&!Array.isArray(u)}if(!Array.isArray(u)||!u.length)return null;let t;if(e){if(r(e)){if((t={...eb,...e}).progressFn&&r(t.progressFn)&&!Object.keys(t.progressFn).length)t.progressFn=null;else if(t.progressFn&&"function"!=typeof t.progressFn)throw Error(`ranges-merge: [THROW_ID_01] resolvedOpts.progressFn must be a function! It was given of a type: "${typeof t.progressFn}", equal to ${JSON.stringify(t.progressFn,null,4)}`);if(![1,2,"1","2"].includes(t.mergeType))throw Error(`ranges-merge: [THROW_ID_02] resolvedOpts.mergeType was customised to a wrong thing! It was given of a type: "${typeof t.mergeType}", equal to ${JSON.stringify(t.mergeType,null,4)}`);if("boolean"!=typeof t.joinRangesThatTouchEdges)throw Error(`ranges-merge: [THROW_ID_04] resolvedOpts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof t.joinRangesThatTouchEdges}", equal to ${JSON.stringify(t.joinRangesThatTouchEdges,null,4)}`)}else throw Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(e,null,4)} (type ${typeof e})`)}else t={...eb};let a=u.filter(u=>Array.isArray(u)).map(u=>[...u]).filter(u=>void 0!==u[2]||u[0]!==u[1]),n,s,i,o=(n=t.progressFn?e1(a,{progressFn(u){(i=Math.floor(u/5))!==s&&(s=i,t.progressFn(i))}}):e1(a)).length-1;for(let l=o;l>0;l--)t.progressFn&&(i=Math.floor((1-l/o)*78)+21)!==s&&i>s&&(s=i,t.progressFn(i)),(n[l][0]<=n[l-1][0]||!t.joinRangesThatTouchEdges&&n[l][0]<n[l-1][1]||t.joinRangesThatTouchEdges&&n[l][0]<=n[l-1][1])&&(n[l-1][0]=Math.min(n[l][0],n[l-1][0]),n[l-1][1]=Math.max(n[l][1],n[l-1][1]),void 0!==n[l][2]&&(n[l-1][0]>=n[l][0]||n[l-1][1]<=n[l][1])&&null!==n[l-1][2]&&(null===n[l][2]&&null!==n[l-1][2]?n[l-1][2]=null:null!=n[l-1][2]?2==+t.mergeType&&n[l-1][0]===n[l][0]?n[l-1][2]=n[l][2]:n[l-1][2]+=n[l][2]:n[l-1][2]=n[l][2]),n.splice(l,1),l=n.length);return n.length?n:null}(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map(u=>B(u[2])?[u[0],u[1],e7(u[2],this.opts.limitLinebreaksCount)]:u):this.ranges):null}wipe(){this.ranges=[]}replace(u){if(Array.isArray(u)&&u.length){if(Array.isArray(u[0])&&x(u[0][0]))this.ranges=Array.from(u);else throw Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(u[0],null,4)} should be an array and its first element should be an integer, a string index.`)}else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}};function eB(u,e=0){return function({str:u,idx:e=0,stopAtNewlines:r=!1,stopAtRawNbsp:t=!1}){if("string"!=typeof u||!u.length||(e&&"number"==typeof e||(e=0),!u[e+1]))return null;if(u[e+1]&&(u[e+1].trim()||r&&`
\r`.includes(u[e+1])||t&&"\xa0"===u[e+1]))return e+1;if(u[e+2]&&(u[e+2].trim()||r&&`
\r`.includes(u[e+2])||t&&"\xa0"===u[e+2]))return e+2;for(let a=e+1,n=u.length;a<n;a++)if(u[a].trim()||r&&`
\r`.includes(u[a])||t&&"\xa0"===u[a])return a;return null}({str:u,idx:e,stopAtNewlines:!1,stopAtRawNbsp:!1})}function ey(u){return/[-_A-Za-z0-9]/.test(u)}function eC(u,e){if(!u)return[];if(Array.isArray(u))return u.filter(u=>"string"==typeof u&&u.trim());if("string"==typeof u)return u.trim()?[u]:[];throw TypeError(`string-strip-html/stripHtml(): [THROW_ID_05] ${e} must be array containing zero or more strings or something falsey. Currently it's equal to: ${u}, that a type of ${typeof u}.`)}function eE(u,e,r,t){for(let a=e,n=u.length;a<n;a++){if(u.startsWith(r,a))return!0;if(u.startsWith(t,a))break}return!1}function e2(u,e,r){return u?.quotes,u?.quotes?.value&&eE(e,r+1,u.quotes.value,">"),u?.quotes?.next,eE(e,u?.quotes?.next-1,u?.quotes?.value,">"),!u?.quotes||!eE(e,r+1,u.quotes.value,">")&&u?.quotes?.next!==-1&&eE(e,u?.quotes?.next-1,u?.quotes?.value,">")}function ev(u,e){return(e.match(RegExp(u,"g"))||[]).length}(0,_(m(),1).default)();var eF=new Set(["!doctype","abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","rb","rp","rt","rtc","ruby","samp","script","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","ul","var","video","wbr","xml"]),e4=new Set(["a","b","i","p","q","s","u"]),e6=new Set([".",",",";","!","?"]),e5=new Set([".",",","?",";",")","…",'"',"\xbb"]),eq=new Set(["a","abbr","acronym","audio","b","bdi","bdo","big","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","input","ins","kbd","label","map","mark","meter","noscript","object","output","picture","progress","q","ruby","s","samp","select","slot","small","span","strong","sub","sup","svg","template","textarea","time","u","tt","var","video","wbr"]),ew="13.4.0",eT={ignoreTags:[],ignoreTagsWithTheirContents:[],onlyStripTags:[],stripTogetherWithTheirContents:["script","style","xml"],skipHtmlDecoding:!1,trimOnlySpaces:!1,stripRecognisedHTMLOnly:!1,dumpLinkHrefsNearby:{enabled:!1,putOnNewLine:!1,wrapHeads:"",wrapTails:""},ignoreIndentations:!1,cb:null,reportProgressFunc:null,reportProgressFuncFrom:0,reportProgressFuncTo:100};/**
 * @name codsen-utils
 * @fileoverview Various utility functions
 * @version 1.5.0
 * @author Roy Revelt, Codsen Ltd
 * @license MIT
 * {@link https://codsen.com/os/codsen-utils/}
 */ /**
 * @name ranges-sort
 * @fileoverview Sort string index ranges
 * @version 6.0.8
 * @author Roy Revelt, Codsen Ltd
 * @license MIT
 * {@link https://codsen.com/os/ranges-sort/}
 */ /**
 * @name ranges-merge
 * @fileoverview Merge and sort string index ranges
 * @version 9.0.9
 * @author Roy Revelt, Codsen Ltd
 * @license MIT
 * {@link https://codsen.com/os/ranges-merge/}
 */ /**
 * @name ranges-apply
 * @fileoverview Take an array of string index ranges, delete/replace the string according to them
 * @version 7.0.9
 * @author Roy Revelt, Codsen Ltd
 * @license MIT
 * {@link https://codsen.com/os/ranges-apply/}
 */ /**
 * @name string-collapse-leading-whitespace
 * @fileoverview Collapse the leading and trailing whitespace of a string
 * @version 7.0.5
 * @author Roy Revelt, Codsen Ltd
 * @license MIT
 * {@link https://codsen.com/os/string-collapse-leading-whitespace/}
 */ /**
 * @name ranges-push
 * @fileoverview Gather string index ranges
 * @version 7.0.9
 * @author Roy Revelt, Codsen Ltd
 * @license MIT
 * {@link https://codsen.com/os/ranges-push/}
 */ /**
 * @name string-left-right
 * @fileoverview Looks up the first non-whitespace character to the left/right of a given index
 * @version 6.0.12
 * @author Roy Revelt, Codsen Ltd
 * @license MIT
 * {@link https://codsen.com/os/string-left-right/}
 */ /*! Bundled license information:

lodash-es/lodash.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)
*/ }}]);
//# sourceMappingURL=780d19ab-0dd5caa7a1a28f85.js.map